/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.timing_pattern;


import fi.hsl.jore.jore4.jooq.DefaultCatalog;
import fi.hsl.jore.jore4.jooq.timing_pattern.tables.TimingPlace;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TimingPattern extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>timing_pattern</code>
     */
    public static final TimingPattern TIMING_PATTERN = new TimingPattern();

    /**
     * A set of SCHEDULED STOP POINTs against which the timing information
     * necessary to build schedules may be recorded. In HSL context this is
     * "Hastus paikka". Based on Transmodel entity TIMING POINT:
     * https://www.transmodel-cen.eu/model/index.htm?goto=2:3:2:709 
     */
    public final TimingPlace TIMING_PLACE = TimingPlace.TIMING_PLACE;

    /**
     * No further instances allowed
     */
    private TimingPattern() {
        super("timing_pattern", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            TimingPlace.TIMING_PLACE
        );
    }
}
