/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.service_pattern.tables;


import fi.hsl.jore.jore4.jooq.service_pattern.ServicePattern;

import java.time.LocalDate;
import java.util.UUID;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GetDistancesBetweenStopPointsByRoutes extends TableImpl<Record> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>service_pattern.get_distances_between_stop_points_by_routes</code>
     */
    public static final GetDistancesBetweenStopPointsByRoutes GET_DISTANCES_BETWEEN_STOP_POINTS_BY_ROUTES = new GetDistancesBetweenStopPointsByRoutes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column
     * <code>service_pattern.get_distances_between_stop_points_by_routes.journey_pattern_id</code>.
     */
    public final TableField<Record, UUID> JOURNEY_PATTERN_ID = createField(DSL.name("journey_pattern_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column
     * <code>service_pattern.get_distances_between_stop_points_by_routes.route_id</code>.
     */
    public final TableField<Record, UUID> ROUTE_ID = createField(DSL.name("route_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column
     * <code>service_pattern.get_distances_between_stop_points_by_routes.route_priority</code>.
     */
    public final TableField<Record, Integer> ROUTE_PRIORITY = createField(DSL.name("route_priority"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column
     * <code>service_pattern.get_distances_between_stop_points_by_routes.observation_date</code>.
     */
    public final TableField<Record, LocalDate> OBSERVATION_DATE = createField(DSL.name("observation_date"), SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column
     * <code>service_pattern.get_distances_between_stop_points_by_routes.stop_interval_sequence</code>.
     */
    public final TableField<Record, Integer> STOP_INTERVAL_SEQUENCE = createField(DSL.name("stop_interval_sequence"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column
     * <code>service_pattern.get_distances_between_stop_points_by_routes.start_stop_label</code>.
     */
    public final TableField<Record, String> START_STOP_LABEL = createField(DSL.name("start_stop_label"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column
     * <code>service_pattern.get_distances_between_stop_points_by_routes.end_stop_label</code>.
     */
    public final TableField<Record, String> END_STOP_LABEL = createField(DSL.name("end_stop_label"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column
     * <code>service_pattern.get_distances_between_stop_points_by_routes.distance_in_metres</code>.
     */
    public final TableField<Record, Double> DISTANCE_IN_METRES = createField(DSL.name("distance_in_metres"), SQLDataType.DOUBLE.nullable(false), this, "");

    private GetDistancesBetweenStopPointsByRoutes(Name alias, Table<Record> aliased) {
        this(alias, aliased, new Field[] {
            DSL.val(null, SQLDataType.UUID.array()),
            DSL.val(null, SQLDataType.LOCALDATE)
        });
    }

    private GetDistancesBetweenStopPointsByRoutes(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        this(alias, aliased, parameters, null);
    }

    private GetDistancesBetweenStopPointsByRoutes(Name alias, Table<Record> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.function(), where);
    }

    /**
     * Create an aliased
     * <code>service_pattern.get_distances_between_stop_points_by_routes</code>
     * table reference
     */
    public GetDistancesBetweenStopPointsByRoutes(String alias) {
        this(DSL.name(alias), GET_DISTANCES_BETWEEN_STOP_POINTS_BY_ROUTES);
    }

    /**
     * Create an aliased
     * <code>service_pattern.get_distances_between_stop_points_by_routes</code>
     * table reference
     */
    public GetDistancesBetweenStopPointsByRoutes(Name alias) {
        this(alias, GET_DISTANCES_BETWEEN_STOP_POINTS_BY_ROUTES);
    }

    /**
     * Create a
     * <code>service_pattern.get_distances_between_stop_points_by_routes</code>
     * table reference
     */
    public GetDistancesBetweenStopPointsByRoutes() {
        this(DSL.name("get_distances_between_stop_points_by_routes"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ServicePattern.SERVICE_PATTERN;
    }

    @Override
    public GetDistancesBetweenStopPointsByRoutes as(String alias) {
        return new GetDistancesBetweenStopPointsByRoutes(DSL.name(alias), this, parameters);
    }

    @Override
    public GetDistancesBetweenStopPointsByRoutes as(Name alias) {
        return new GetDistancesBetweenStopPointsByRoutes(alias, this, parameters);
    }

    @Override
    public GetDistancesBetweenStopPointsByRoutes as(Table<?> alias) {
        return new GetDistancesBetweenStopPointsByRoutes(alias.getQualifiedName(), this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetDistancesBetweenStopPointsByRoutes rename(String name) {
        return new GetDistancesBetweenStopPointsByRoutes(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetDistancesBetweenStopPointsByRoutes rename(Name name) {
        return new GetDistancesBetweenStopPointsByRoutes(name, null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetDistancesBetweenStopPointsByRoutes rename(Table<?> name) {
        return new GetDistancesBetweenStopPointsByRoutes(name.getQualifiedName(), null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public GetDistancesBetweenStopPointsByRoutes call(
          UUID[] routeIds
        , LocalDate observationDate
    ) {
        GetDistancesBetweenStopPointsByRoutes result = new GetDistancesBetweenStopPointsByRoutes(DSL.name("get_distances_between_stop_points_by_routes"), null, new Field[] {
            DSL.val(routeIds, SQLDataType.UUID.array()),
            DSL.val(observationDate, SQLDataType.LOCALDATE)
        });

        return aliased() ? result.as(getUnqualifiedName()) : result;
    }

    /**
     * Call this table-valued function
     */
    public GetDistancesBetweenStopPointsByRoutes call(
          Field<UUID[]> routeIds
        , Field<LocalDate> observationDate
    ) {
        GetDistancesBetweenStopPointsByRoutes result = new GetDistancesBetweenStopPointsByRoutes(DSL.name("get_distances_between_stop_points_by_routes"), null, new Field[] {
            routeIds,
            observationDate
        });

        return aliased() ? result.as(getUnqualifiedName()) : result;
    }
}
