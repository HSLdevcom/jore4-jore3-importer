/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.service_pattern;


import fi.hsl.jore.jore4.jooq.service_pattern.routines.DeleteScheduledStopPointLabel;
import fi.hsl.jore.jore4.jooq.service_pattern.routines.InsertScheduledStopPointLabel;
import fi.hsl.jore.jore4.jooq.service_pattern.routines.ScheduledStopPointClosestPointOnInfrastructureLink;
import fi.hsl.jore.jore4.jooq.service_pattern.routines.SspRelativeDistanceFromInfrastructureLinkStart;
import fi.hsl.jore.jore4.jooq.service_pattern.tables.FindEffectiveScheduledStopPointsInJourneyPattern;
import fi.hsl.jore.jore4.jooq.service_pattern.tables.FindScheduledStopPointLocationsInJourneyPattern;
import fi.hsl.jore.jore4.jooq.service_pattern.tables.GetDistancesBetweenStopPointsByRoutes;
import fi.hsl.jore.jore4.jooq.service_pattern.tables.GetDistancesBetweenStopPointsInJourneyPattern;
import fi.hsl.jore.jore4.jooq.service_pattern.tables.GetDistancesBetweenStopPointsInJourneyPatterns;
import fi.hsl.jore.jore4.jooq.service_pattern.tables.NewScheduledStopPointIfIdGiven;

import java.time.LocalDate;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Record;
import org.jooq.Result;


/**
 * Convenience access to all stored procedures and functions in service_pattern.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Routines {

    /**
     * Call <code>service_pattern.delete_scheduled_stop_point_label</code>
     */
    public static void deleteScheduledStopPointLabel(
          Configuration configuration
        , String oldLabel
    ) {
        DeleteScheduledStopPointLabel p = new DeleteScheduledStopPointLabel();
        p.setOldLabel(oldLabel);

        p.execute(configuration);
    }

    /**
     * Call <code>service_pattern.insert_scheduled_stop_point_label</code>
     */
    public static void insertScheduledStopPointLabel(
          Configuration configuration
        , String newLabel
    ) {
        InsertScheduledStopPointLabel p = new InsertScheduledStopPointLabel();
        p.setNewLabel(newLabel);

        p.execute(configuration);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Object scheduledStopPointClosestPointOnInfrastructureLink(
          Configuration configuration
        , Record ssp
    ) {
        ScheduledStopPointClosestPointOnInfrastructureLink f = new ScheduledStopPointClosestPointOnInfrastructureLink();
        f.setSsp(ssp);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> scheduledStopPointClosestPointOnInfrastructureLink(
          Record ssp
    ) {
        ScheduledStopPointClosestPointOnInfrastructureLink f = new ScheduledStopPointClosestPointOnInfrastructureLink();
        f.setSsp(ssp);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> scheduledStopPointClosestPointOnInfrastructureLink(
          Field<Record> ssp
    ) {
        ScheduledStopPointClosestPointOnInfrastructureLink f = new ScheduledStopPointClosestPointOnInfrastructureLink();
        f.setSsp(ssp);

        return f.asField();
    }

    /**
     * Call
     * <code>service_pattern.ssp_relative_distance_from_infrastructure_link_start</code>
     */
    public static Double sspRelativeDistanceFromInfrastructureLinkStart(
          Configuration configuration
        , Record ssp
    ) {
        SspRelativeDistanceFromInfrastructureLinkStart f = new SspRelativeDistanceFromInfrastructureLinkStart();
        f.setSsp(ssp);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get
     * <code>service_pattern.ssp_relative_distance_from_infrastructure_link_start</code>
     * as a field.
     */
    public static Field<Double> sspRelativeDistanceFromInfrastructureLinkStart(
          Record ssp
    ) {
        SspRelativeDistanceFromInfrastructureLinkStart f = new SspRelativeDistanceFromInfrastructureLinkStart();
        f.setSsp(ssp);

        return f.asField();
    }

    /**
     * Get
     * <code>service_pattern.ssp_relative_distance_from_infrastructure_link_start</code>
     * as a field.
     */
    public static Field<Double> sspRelativeDistanceFromInfrastructureLinkStart(
          Field<Record> ssp
    ) {
        SspRelativeDistanceFromInfrastructureLinkStart f = new SspRelativeDistanceFromInfrastructureLinkStart();
        f.setSsp(ssp);

        return f.asField();
    }

    /**
     * Call
     * <code>service_pattern.find_effective_scheduled_stop_points_in_journey_pattern</code>.
     */
    public static Result<Record> findEffectiveScheduledStopPointsInJourneyPattern(
          Configuration configuration
        , UUID filterJourneyPatternId
        , LocalDate observationDate
        , Boolean includeDraftStops
    ) {
        return configuration.dsl().selectFrom(fi.hsl.jore.jore4.jooq.service_pattern.tables.FindEffectiveScheduledStopPointsInJourneyPattern.FIND_EFFECTIVE_SCHEDULED_STOP_POINTS_IN_JOURNEY_PATTERN.call(
              filterJourneyPatternId
            , observationDate
            , includeDraftStops
        )).fetch();
    }

    /**
     * Get
     * <code>service_pattern.find_effective_scheduled_stop_points_in_journey_pattern</code>
     * as a table.
     */
    public static FindEffectiveScheduledStopPointsInJourneyPattern findEffectiveScheduledStopPointsInJourneyPattern(
          UUID filterJourneyPatternId
        , LocalDate observationDate
        , Boolean includeDraftStops
    ) {
        return fi.hsl.jore.jore4.jooq.service_pattern.tables.FindEffectiveScheduledStopPointsInJourneyPattern.FIND_EFFECTIVE_SCHEDULED_STOP_POINTS_IN_JOURNEY_PATTERN.call(
            filterJourneyPatternId,
            observationDate,
            includeDraftStops
        );
    }

    /**
     * Get
     * <code>service_pattern.find_effective_scheduled_stop_points_in_journey_pattern</code>
     * as a table.
     */
    public static FindEffectiveScheduledStopPointsInJourneyPattern findEffectiveScheduledStopPointsInJourneyPattern(
          Field<UUID> filterJourneyPatternId
        , Field<LocalDate> observationDate
        , Field<Boolean> includeDraftStops
    ) {
        return fi.hsl.jore.jore4.jooq.service_pattern.tables.FindEffectiveScheduledStopPointsInJourneyPattern.FIND_EFFECTIVE_SCHEDULED_STOP_POINTS_IN_JOURNEY_PATTERN.call(
            filterJourneyPatternId,
            observationDate,
            includeDraftStops
        );
    }

    /**
     * Call
     * <code>service_pattern.find_scheduled_stop_point_locations_in_journey_pattern</code>.
     */
    public static Result<Record> findScheduledStopPointLocationsInJourneyPattern(
          Configuration configuration
        , UUID filterJourneyPatternId
        , LocalDate observationDate
        , Boolean includeDraftStops
    ) {
        return configuration.dsl().selectFrom(fi.hsl.jore.jore4.jooq.service_pattern.tables.FindScheduledStopPointLocationsInJourneyPattern.FIND_SCHEDULED_STOP_POINT_LOCATIONS_IN_JOURNEY_PATTERN.call(
              filterJourneyPatternId
            , observationDate
            , includeDraftStops
        )).fetch();
    }

    /**
     * Get
     * <code>service_pattern.find_scheduled_stop_point_locations_in_journey_pattern</code>
     * as a table.
     */
    public static FindScheduledStopPointLocationsInJourneyPattern findScheduledStopPointLocationsInJourneyPattern(
          UUID filterJourneyPatternId
        , LocalDate observationDate
        , Boolean includeDraftStops
    ) {
        return fi.hsl.jore.jore4.jooq.service_pattern.tables.FindScheduledStopPointLocationsInJourneyPattern.FIND_SCHEDULED_STOP_POINT_LOCATIONS_IN_JOURNEY_PATTERN.call(
            filterJourneyPatternId,
            observationDate,
            includeDraftStops
        );
    }

    /**
     * Get
     * <code>service_pattern.find_scheduled_stop_point_locations_in_journey_pattern</code>
     * as a table.
     */
    public static FindScheduledStopPointLocationsInJourneyPattern findScheduledStopPointLocationsInJourneyPattern(
          Field<UUID> filterJourneyPatternId
        , Field<LocalDate> observationDate
        , Field<Boolean> includeDraftStops
    ) {
        return fi.hsl.jore.jore4.jooq.service_pattern.tables.FindScheduledStopPointLocationsInJourneyPattern.FIND_SCHEDULED_STOP_POINT_LOCATIONS_IN_JOURNEY_PATTERN.call(
            filterJourneyPatternId,
            observationDate,
            includeDraftStops
        );
    }

    /**
     * Call
     * <code>service_pattern.get_distances_between_stop_points_by_routes</code>.
     */
    public static Result<Record> getDistancesBetweenStopPointsByRoutes(
          Configuration configuration
        , UUID[] routeIds
        , LocalDate observationDate
    ) {
        return configuration.dsl().selectFrom(fi.hsl.jore.jore4.jooq.service_pattern.tables.GetDistancesBetweenStopPointsByRoutes.GET_DISTANCES_BETWEEN_STOP_POINTS_BY_ROUTES.call(
              routeIds
            , observationDate
        )).fetch();
    }

    /**
     * Get
     * <code>service_pattern.get_distances_between_stop_points_by_routes</code>
     * as a table.
     */
    public static GetDistancesBetweenStopPointsByRoutes getDistancesBetweenStopPointsByRoutes(
          UUID[] routeIds
        , LocalDate observationDate
    ) {
        return fi.hsl.jore.jore4.jooq.service_pattern.tables.GetDistancesBetweenStopPointsByRoutes.GET_DISTANCES_BETWEEN_STOP_POINTS_BY_ROUTES.call(
            routeIds,
            observationDate
        );
    }

    /**
     * Get
     * <code>service_pattern.get_distances_between_stop_points_by_routes</code>
     * as a table.
     */
    public static GetDistancesBetweenStopPointsByRoutes getDistancesBetweenStopPointsByRoutes(
          Field<UUID[]> routeIds
        , Field<LocalDate> observationDate
    ) {
        return fi.hsl.jore.jore4.jooq.service_pattern.tables.GetDistancesBetweenStopPointsByRoutes.GET_DISTANCES_BETWEEN_STOP_POINTS_BY_ROUTES.call(
            routeIds,
            observationDate
        );
    }

    /**
     * Call
     * <code>service_pattern.get_distances_between_stop_points_in_journey_pattern</code>.
     */
    public static Result<Record> getDistancesBetweenStopPointsInJourneyPattern(
          Configuration configuration
        , UUID journeyPatternId
        , LocalDate observationDate
        , Boolean includeDraftStops
    ) {
        return configuration.dsl().selectFrom(fi.hsl.jore.jore4.jooq.service_pattern.tables.GetDistancesBetweenStopPointsInJourneyPattern.GET_DISTANCES_BETWEEN_STOP_POINTS_IN_JOURNEY_PATTERN.call(
              journeyPatternId
            , observationDate
            , includeDraftStops
        )).fetch();
    }

    /**
     * Get
     * <code>service_pattern.get_distances_between_stop_points_in_journey_pattern</code>
     * as a table.
     */
    public static GetDistancesBetweenStopPointsInJourneyPattern getDistancesBetweenStopPointsInJourneyPattern(
          UUID journeyPatternId
        , LocalDate observationDate
        , Boolean includeDraftStops
    ) {
        return fi.hsl.jore.jore4.jooq.service_pattern.tables.GetDistancesBetweenStopPointsInJourneyPattern.GET_DISTANCES_BETWEEN_STOP_POINTS_IN_JOURNEY_PATTERN.call(
            journeyPatternId,
            observationDate,
            includeDraftStops
        );
    }

    /**
     * Get
     * <code>service_pattern.get_distances_between_stop_points_in_journey_pattern</code>
     * as a table.
     */
    public static GetDistancesBetweenStopPointsInJourneyPattern getDistancesBetweenStopPointsInJourneyPattern(
          Field<UUID> journeyPatternId
        , Field<LocalDate> observationDate
        , Field<Boolean> includeDraftStops
    ) {
        return fi.hsl.jore.jore4.jooq.service_pattern.tables.GetDistancesBetweenStopPointsInJourneyPattern.GET_DISTANCES_BETWEEN_STOP_POINTS_IN_JOURNEY_PATTERN.call(
            journeyPatternId,
            observationDate,
            includeDraftStops
        );
    }

    /**
     * Call
     * <code>service_pattern.get_distances_between_stop_points_in_journey_patterns</code>.
     */
    public static Result<Record> getDistancesBetweenStopPointsInJourneyPatterns(
          Configuration configuration
        , UUID[] journeyPatternIds
        , LocalDate observationDate
        , Boolean includeDraftStops
    ) {
        return configuration.dsl().selectFrom(fi.hsl.jore.jore4.jooq.service_pattern.tables.GetDistancesBetweenStopPointsInJourneyPatterns.GET_DISTANCES_BETWEEN_STOP_POINTS_IN_JOURNEY_PATTERNS.call(
              journeyPatternIds
            , observationDate
            , includeDraftStops
        )).fetch();
    }

    /**
     * Get
     * <code>service_pattern.get_distances_between_stop_points_in_journey_patterns</code>
     * as a table.
     */
    public static GetDistancesBetweenStopPointsInJourneyPatterns getDistancesBetweenStopPointsInJourneyPatterns(
          UUID[] journeyPatternIds
        , LocalDate observationDate
        , Boolean includeDraftStops
    ) {
        return fi.hsl.jore.jore4.jooq.service_pattern.tables.GetDistancesBetweenStopPointsInJourneyPatterns.GET_DISTANCES_BETWEEN_STOP_POINTS_IN_JOURNEY_PATTERNS.call(
            journeyPatternIds,
            observationDate,
            includeDraftStops
        );
    }

    /**
     * Get
     * <code>service_pattern.get_distances_between_stop_points_in_journey_patterns</code>
     * as a table.
     */
    public static GetDistancesBetweenStopPointsInJourneyPatterns getDistancesBetweenStopPointsInJourneyPatterns(
          Field<UUID[]> journeyPatternIds
        , Field<LocalDate> observationDate
        , Field<Boolean> includeDraftStops
    ) {
        return fi.hsl.jore.jore4.jooq.service_pattern.tables.GetDistancesBetweenStopPointsInJourneyPatterns.GET_DISTANCES_BETWEEN_STOP_POINTS_IN_JOURNEY_PATTERNS.call(
            journeyPatternIds,
            observationDate,
            includeDraftStops
        );
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Result<Record> newScheduledStopPointIfIdGiven(
          Configuration configuration
        , UUID newScheduledStopPointId
        , UUID newLocatedOnInfrastructureLinkId
        , Object newMeasuredLocation
        , String newDirection
        , String newLabel
        , LocalDate newValidityStart
        , LocalDate newValidityEnd
        , Integer newPriority
    ) {
        return configuration.dsl().selectFrom(fi.hsl.jore.jore4.jooq.service_pattern.tables.NewScheduledStopPointIfIdGiven.NEW_SCHEDULED_STOP_POINT_IF_ID_GIVEN.call(
              newScheduledStopPointId
            , newLocatedOnInfrastructureLinkId
            , newMeasuredLocation
            , newDirection
            , newLabel
            , newValidityStart
            , newValidityEnd
            , newPriority
        )).fetch();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static NewScheduledStopPointIfIdGiven newScheduledStopPointIfIdGiven(
          UUID newScheduledStopPointId
        , UUID newLocatedOnInfrastructureLinkId
        , Object newMeasuredLocation
        , String newDirection
        , String newLabel
        , LocalDate newValidityStart
        , LocalDate newValidityEnd
        , Integer newPriority
    ) {
        return fi.hsl.jore.jore4.jooq.service_pattern.tables.NewScheduledStopPointIfIdGiven.NEW_SCHEDULED_STOP_POINT_IF_ID_GIVEN.call(
            newScheduledStopPointId,
            newLocatedOnInfrastructureLinkId,
            newMeasuredLocation,
            newDirection,
            newLabel,
            newValidityStart,
            newValidityEnd,
            newPriority
        );
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static NewScheduledStopPointIfIdGiven newScheduledStopPointIfIdGiven(
          Field<UUID> newScheduledStopPointId
        , Field<UUID> newLocatedOnInfrastructureLinkId
        , Field<Object> newMeasuredLocation
        , Field<String> newDirection
        , Field<String> newLabel
        , Field<LocalDate> newValidityStart
        , Field<LocalDate> newValidityEnd
        , Field<Integer> newPriority
    ) {
        return fi.hsl.jore.jore4.jooq.service_pattern.tables.NewScheduledStopPointIfIdGiven.NEW_SCHEDULED_STOP_POINT_IF_ID_GIVEN.call(
            newScheduledStopPointId,
            newLocatedOnInfrastructureLinkId,
            newMeasuredLocation,
            newDirection,
            newLabel,
            newValidityStart,
            newValidityEnd,
            newPriority
        );
    }
}
