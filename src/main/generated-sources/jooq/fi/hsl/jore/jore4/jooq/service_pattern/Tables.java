/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.service_pattern;


import fi.hsl.jore.jore4.jooq.service_pattern.tables.DistanceBetweenStopsCalculation;
import fi.hsl.jore.jore4.jooq.service_pattern.tables.FindEffectiveScheduledStopPointsInJourneyPattern;
import fi.hsl.jore.jore4.jooq.service_pattern.tables.FindScheduledStopPointLocationsInJourneyPattern;
import fi.hsl.jore.jore4.jooq.service_pattern.tables.GetDistancesBetweenStopPointsByRoutes;
import fi.hsl.jore.jore4.jooq.service_pattern.tables.GetDistancesBetweenStopPointsInJourneyPattern;
import fi.hsl.jore.jore4.jooq.service_pattern.tables.GetDistancesBetweenStopPointsInJourneyPatterns;
import fi.hsl.jore.jore4.jooq.service_pattern.tables.NewScheduledStopPointIfIdGiven;
import fi.hsl.jore.jore4.jooq.service_pattern.tables.ScheduledStopPoint;
import fi.hsl.jore.jore4.jooq.service_pattern.tables.ScheduledStopPointInvariant;
import fi.hsl.jore.jore4.jooq.service_pattern.tables.ScheduledStopPointsWithInfraLinkData;
import fi.hsl.jore.jore4.jooq.service_pattern.tables.VehicleModeOnScheduledStopPoint;

import java.time.LocalDate;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Record;
import org.jooq.Result;


/**
 * Convenience access to all tables in service_pattern.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tables {

    /**
     * A dummy table that models the results of calculating the lengths of stop
     * intervals from the given journey patterns. The table exists due to the
     * limitations of Hasura and there is no intention to insert anything to it.
     */
    public static final DistanceBetweenStopsCalculation DISTANCE_BETWEEN_STOPS_CALCULATION = DistanceBetweenStopsCalculation.DISTANCE_BETWEEN_STOPS_CALCULATION;

    /**
     * The table
     * <code>service_pattern.find_effective_scheduled_stop_points_in_journey_pattern</code>.
     */
    public static final FindEffectiveScheduledStopPointsInJourneyPattern FIND_EFFECTIVE_SCHEDULED_STOP_POINTS_IN_JOURNEY_PATTERN = FindEffectiveScheduledStopPointsInJourneyPattern.FIND_EFFECTIVE_SCHEDULED_STOP_POINTS_IN_JOURNEY_PATTERN;

    /**
     * Call
     * <code>service_pattern.find_effective_scheduled_stop_points_in_journey_pattern</code>.
     */
    public static Result<Record> FIND_EFFECTIVE_SCHEDULED_STOP_POINTS_IN_JOURNEY_PATTERN(
          Configuration configuration
        , UUID filterJourneyPatternId
        , LocalDate observationDate
        , Boolean includeDraftStops
    ) {
        return configuration.dsl().selectFrom(fi.hsl.jore.jore4.jooq.service_pattern.tables.FindEffectiveScheduledStopPointsInJourneyPattern.FIND_EFFECTIVE_SCHEDULED_STOP_POINTS_IN_JOURNEY_PATTERN.call(
              filterJourneyPatternId
            , observationDate
            , includeDraftStops
        )).fetch();
    }

    /**
     * Get
     * <code>service_pattern.find_effective_scheduled_stop_points_in_journey_pattern</code>
     * as a table.
     */
    public static FindEffectiveScheduledStopPointsInJourneyPattern FIND_EFFECTIVE_SCHEDULED_STOP_POINTS_IN_JOURNEY_PATTERN(
          UUID filterJourneyPatternId
        , LocalDate observationDate
        , Boolean includeDraftStops
    ) {
        return fi.hsl.jore.jore4.jooq.service_pattern.tables.FindEffectiveScheduledStopPointsInJourneyPattern.FIND_EFFECTIVE_SCHEDULED_STOP_POINTS_IN_JOURNEY_PATTERN.call(
            filterJourneyPatternId,
            observationDate,
            includeDraftStops
        );
    }

    /**
     * Get
     * <code>service_pattern.find_effective_scheduled_stop_points_in_journey_pattern</code>
     * as a table.
     */
    public static FindEffectiveScheduledStopPointsInJourneyPattern FIND_EFFECTIVE_SCHEDULED_STOP_POINTS_IN_JOURNEY_PATTERN(
          Field<UUID> filterJourneyPatternId
        , Field<LocalDate> observationDate
        , Field<Boolean> includeDraftStops
    ) {
        return fi.hsl.jore.jore4.jooq.service_pattern.tables.FindEffectiveScheduledStopPointsInJourneyPattern.FIND_EFFECTIVE_SCHEDULED_STOP_POINTS_IN_JOURNEY_PATTERN.call(
            filterJourneyPatternId,
            observationDate,
            includeDraftStops
        );
    }

    /**
     * The table
     * <code>service_pattern.find_scheduled_stop_point_locations_in_journey_pattern</code>.
     */
    public static final FindScheduledStopPointLocationsInJourneyPattern FIND_SCHEDULED_STOP_POINT_LOCATIONS_IN_JOURNEY_PATTERN = FindScheduledStopPointLocationsInJourneyPattern.FIND_SCHEDULED_STOP_POINT_LOCATIONS_IN_JOURNEY_PATTERN;

    /**
     * Call
     * <code>service_pattern.find_scheduled_stop_point_locations_in_journey_pattern</code>.
     */
    public static Result<Record> FIND_SCHEDULED_STOP_POINT_LOCATIONS_IN_JOURNEY_PATTERN(
          Configuration configuration
        , UUID filterJourneyPatternId
        , LocalDate observationDate
        , Boolean includeDraftStops
    ) {
        return configuration.dsl().selectFrom(fi.hsl.jore.jore4.jooq.service_pattern.tables.FindScheduledStopPointLocationsInJourneyPattern.FIND_SCHEDULED_STOP_POINT_LOCATIONS_IN_JOURNEY_PATTERN.call(
              filterJourneyPatternId
            , observationDate
            , includeDraftStops
        )).fetch();
    }

    /**
     * Get
     * <code>service_pattern.find_scheduled_stop_point_locations_in_journey_pattern</code>
     * as a table.
     */
    public static FindScheduledStopPointLocationsInJourneyPattern FIND_SCHEDULED_STOP_POINT_LOCATIONS_IN_JOURNEY_PATTERN(
          UUID filterJourneyPatternId
        , LocalDate observationDate
        , Boolean includeDraftStops
    ) {
        return fi.hsl.jore.jore4.jooq.service_pattern.tables.FindScheduledStopPointLocationsInJourneyPattern.FIND_SCHEDULED_STOP_POINT_LOCATIONS_IN_JOURNEY_PATTERN.call(
            filterJourneyPatternId,
            observationDate,
            includeDraftStops
        );
    }

    /**
     * Get
     * <code>service_pattern.find_scheduled_stop_point_locations_in_journey_pattern</code>
     * as a table.
     */
    public static FindScheduledStopPointLocationsInJourneyPattern FIND_SCHEDULED_STOP_POINT_LOCATIONS_IN_JOURNEY_PATTERN(
          Field<UUID> filterJourneyPatternId
        , Field<LocalDate> observationDate
        , Field<Boolean> includeDraftStops
    ) {
        return fi.hsl.jore.jore4.jooq.service_pattern.tables.FindScheduledStopPointLocationsInJourneyPattern.FIND_SCHEDULED_STOP_POINT_LOCATIONS_IN_JOURNEY_PATTERN.call(
            filterJourneyPatternId,
            observationDate,
            includeDraftStops
        );
    }

    /**
     * The table
     * <code>service_pattern.get_distances_between_stop_points_by_routes</code>.
     */
    public static final GetDistancesBetweenStopPointsByRoutes GET_DISTANCES_BETWEEN_STOP_POINTS_BY_ROUTES = GetDistancesBetweenStopPointsByRoutes.GET_DISTANCES_BETWEEN_STOP_POINTS_BY_ROUTES;

    /**
     * Call
     * <code>service_pattern.get_distances_between_stop_points_by_routes</code>.
     */
    public static Result<Record> GET_DISTANCES_BETWEEN_STOP_POINTS_BY_ROUTES(
          Configuration configuration
        , UUID[] routeIds
        , LocalDate observationDate
    ) {
        return configuration.dsl().selectFrom(fi.hsl.jore.jore4.jooq.service_pattern.tables.GetDistancesBetweenStopPointsByRoutes.GET_DISTANCES_BETWEEN_STOP_POINTS_BY_ROUTES.call(
              routeIds
            , observationDate
        )).fetch();
    }

    /**
     * Get
     * <code>service_pattern.get_distances_between_stop_points_by_routes</code>
     * as a table.
     */
    public static GetDistancesBetweenStopPointsByRoutes GET_DISTANCES_BETWEEN_STOP_POINTS_BY_ROUTES(
          UUID[] routeIds
        , LocalDate observationDate
    ) {
        return fi.hsl.jore.jore4.jooq.service_pattern.tables.GetDistancesBetweenStopPointsByRoutes.GET_DISTANCES_BETWEEN_STOP_POINTS_BY_ROUTES.call(
            routeIds,
            observationDate
        );
    }

    /**
     * Get
     * <code>service_pattern.get_distances_between_stop_points_by_routes</code>
     * as a table.
     */
    public static GetDistancesBetweenStopPointsByRoutes GET_DISTANCES_BETWEEN_STOP_POINTS_BY_ROUTES(
          Field<UUID[]> routeIds
        , Field<LocalDate> observationDate
    ) {
        return fi.hsl.jore.jore4.jooq.service_pattern.tables.GetDistancesBetweenStopPointsByRoutes.GET_DISTANCES_BETWEEN_STOP_POINTS_BY_ROUTES.call(
            routeIds,
            observationDate
        );
    }

    /**
     * The table
     * <code>service_pattern.get_distances_between_stop_points_in_journey_pattern</code>.
     */
    public static final GetDistancesBetweenStopPointsInJourneyPattern GET_DISTANCES_BETWEEN_STOP_POINTS_IN_JOURNEY_PATTERN = GetDistancesBetweenStopPointsInJourneyPattern.GET_DISTANCES_BETWEEN_STOP_POINTS_IN_JOURNEY_PATTERN;

    /**
     * Call
     * <code>service_pattern.get_distances_between_stop_points_in_journey_pattern</code>.
     */
    public static Result<Record> GET_DISTANCES_BETWEEN_STOP_POINTS_IN_JOURNEY_PATTERN(
          Configuration configuration
        , UUID journeyPatternId
        , LocalDate observationDate
        , Boolean includeDraftStops
    ) {
        return configuration.dsl().selectFrom(fi.hsl.jore.jore4.jooq.service_pattern.tables.GetDistancesBetweenStopPointsInJourneyPattern.GET_DISTANCES_BETWEEN_STOP_POINTS_IN_JOURNEY_PATTERN.call(
              journeyPatternId
            , observationDate
            , includeDraftStops
        )).fetch();
    }

    /**
     * Get
     * <code>service_pattern.get_distances_between_stop_points_in_journey_pattern</code>
     * as a table.
     */
    public static GetDistancesBetweenStopPointsInJourneyPattern GET_DISTANCES_BETWEEN_STOP_POINTS_IN_JOURNEY_PATTERN(
          UUID journeyPatternId
        , LocalDate observationDate
        , Boolean includeDraftStops
    ) {
        return fi.hsl.jore.jore4.jooq.service_pattern.tables.GetDistancesBetweenStopPointsInJourneyPattern.GET_DISTANCES_BETWEEN_STOP_POINTS_IN_JOURNEY_PATTERN.call(
            journeyPatternId,
            observationDate,
            includeDraftStops
        );
    }

    /**
     * Get
     * <code>service_pattern.get_distances_between_stop_points_in_journey_pattern</code>
     * as a table.
     */
    public static GetDistancesBetweenStopPointsInJourneyPattern GET_DISTANCES_BETWEEN_STOP_POINTS_IN_JOURNEY_PATTERN(
          Field<UUID> journeyPatternId
        , Field<LocalDate> observationDate
        , Field<Boolean> includeDraftStops
    ) {
        return fi.hsl.jore.jore4.jooq.service_pattern.tables.GetDistancesBetweenStopPointsInJourneyPattern.GET_DISTANCES_BETWEEN_STOP_POINTS_IN_JOURNEY_PATTERN.call(
            journeyPatternId,
            observationDate,
            includeDraftStops
        );
    }

    /**
     * The table
     * <code>service_pattern.get_distances_between_stop_points_in_journey_patterns</code>.
     */
    public static final GetDistancesBetweenStopPointsInJourneyPatterns GET_DISTANCES_BETWEEN_STOP_POINTS_IN_JOURNEY_PATTERNS = GetDistancesBetweenStopPointsInJourneyPatterns.GET_DISTANCES_BETWEEN_STOP_POINTS_IN_JOURNEY_PATTERNS;

    /**
     * Call
     * <code>service_pattern.get_distances_between_stop_points_in_journey_patterns</code>.
     */
    public static Result<Record> GET_DISTANCES_BETWEEN_STOP_POINTS_IN_JOURNEY_PATTERNS(
          Configuration configuration
        , UUID[] journeyPatternIds
        , LocalDate observationDate
        , Boolean includeDraftStops
    ) {
        return configuration.dsl().selectFrom(fi.hsl.jore.jore4.jooq.service_pattern.tables.GetDistancesBetweenStopPointsInJourneyPatterns.GET_DISTANCES_BETWEEN_STOP_POINTS_IN_JOURNEY_PATTERNS.call(
              journeyPatternIds
            , observationDate
            , includeDraftStops
        )).fetch();
    }

    /**
     * Get
     * <code>service_pattern.get_distances_between_stop_points_in_journey_patterns</code>
     * as a table.
     */
    public static GetDistancesBetweenStopPointsInJourneyPatterns GET_DISTANCES_BETWEEN_STOP_POINTS_IN_JOURNEY_PATTERNS(
          UUID[] journeyPatternIds
        , LocalDate observationDate
        , Boolean includeDraftStops
    ) {
        return fi.hsl.jore.jore4.jooq.service_pattern.tables.GetDistancesBetweenStopPointsInJourneyPatterns.GET_DISTANCES_BETWEEN_STOP_POINTS_IN_JOURNEY_PATTERNS.call(
            journeyPatternIds,
            observationDate,
            includeDraftStops
        );
    }

    /**
     * Get
     * <code>service_pattern.get_distances_between_stop_points_in_journey_patterns</code>
     * as a table.
     */
    public static GetDistancesBetweenStopPointsInJourneyPatterns GET_DISTANCES_BETWEEN_STOP_POINTS_IN_JOURNEY_PATTERNS(
          Field<UUID[]> journeyPatternIds
        , Field<LocalDate> observationDate
        , Field<Boolean> includeDraftStops
    ) {
        return fi.hsl.jore.jore4.jooq.service_pattern.tables.GetDistancesBetweenStopPointsInJourneyPatterns.GET_DISTANCES_BETWEEN_STOP_POINTS_IN_JOURNEY_PATTERNS.call(
            journeyPatternIds,
            observationDate,
            includeDraftStops
        );
    }

    /**
     * The table
     * <code>service_pattern.new_scheduled_stop_point_if_id_given</code>.
     */
    public static final NewScheduledStopPointIfIdGiven NEW_SCHEDULED_STOP_POINT_IF_ID_GIVEN = NewScheduledStopPointIfIdGiven.NEW_SCHEDULED_STOP_POINT_IF_ID_GIVEN;

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Result<Record> NEW_SCHEDULED_STOP_POINT_IF_ID_GIVEN(
          Configuration configuration
        , UUID newScheduledStopPointId
        , UUID newLocatedOnInfrastructureLinkId
        , Object newMeasuredLocation
        , String newDirection
        , String newLabel
        , LocalDate newValidityStart
        , LocalDate newValidityEnd
        , Integer newPriority
    ) {
        return configuration.dsl().selectFrom(fi.hsl.jore.jore4.jooq.service_pattern.tables.NewScheduledStopPointIfIdGiven.NEW_SCHEDULED_STOP_POINT_IF_ID_GIVEN.call(
              newScheduledStopPointId
            , newLocatedOnInfrastructureLinkId
            , newMeasuredLocation
            , newDirection
            , newLabel
            , newValidityStart
            , newValidityEnd
            , newPriority
        )).fetch();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static NewScheduledStopPointIfIdGiven NEW_SCHEDULED_STOP_POINT_IF_ID_GIVEN(
          UUID newScheduledStopPointId
        , UUID newLocatedOnInfrastructureLinkId
        , Object newMeasuredLocation
        , String newDirection
        , String newLabel
        , LocalDate newValidityStart
        , LocalDate newValidityEnd
        , Integer newPriority
    ) {
        return fi.hsl.jore.jore4.jooq.service_pattern.tables.NewScheduledStopPointIfIdGiven.NEW_SCHEDULED_STOP_POINT_IF_ID_GIVEN.call(
            newScheduledStopPointId,
            newLocatedOnInfrastructureLinkId,
            newMeasuredLocation,
            newDirection,
            newLabel,
            newValidityStart,
            newValidityEnd,
            newPriority
        );
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static NewScheduledStopPointIfIdGiven NEW_SCHEDULED_STOP_POINT_IF_ID_GIVEN(
          Field<UUID> newScheduledStopPointId
        , Field<UUID> newLocatedOnInfrastructureLinkId
        , Field<Object> newMeasuredLocation
        , Field<String> newDirection
        , Field<String> newLabel
        , Field<LocalDate> newValidityStart
        , Field<LocalDate> newValidityEnd
        , Field<Integer> newPriority
    ) {
        return fi.hsl.jore.jore4.jooq.service_pattern.tables.NewScheduledStopPointIfIdGiven.NEW_SCHEDULED_STOP_POINT_IF_ID_GIVEN.call(
            newScheduledStopPointId,
            newLocatedOnInfrastructureLinkId,
            newMeasuredLocation,
            newDirection,
            newLabel,
            newValidityStart,
            newValidityEnd,
            newPriority
        );
    }

    /**
     * The scheduled stop points:
     * https://www.transmodel-cen.eu/model/index.htm?goto=2:3:4:845 .
     * Colloquially known as stops from the perspective of timetable planning.
     */
    public static final ScheduledStopPoint SCHEDULED_STOP_POINT = ScheduledStopPoint.SCHEDULED_STOP_POINT;

    /**
     * The table <code>service_pattern.scheduled_stop_point_invariant</code>.
     */
    public static final ScheduledStopPointInvariant SCHEDULED_STOP_POINT_INVARIANT = ScheduledStopPointInvariant.SCHEDULED_STOP_POINT_INVARIANT;

    /**
     * Contains scheduled_stop_points enriched with some infra link data.
     */
    public static final ScheduledStopPointsWithInfraLinkData SCHEDULED_STOP_POINTS_WITH_INFRA_LINK_DATA = ScheduledStopPointsWithInfraLinkData.SCHEDULED_STOP_POINTS_WITH_INFRA_LINK_DATA;

    /**
     * Which scheduled stop points are serviced by which vehicle modes?
     */
    public static final VehicleModeOnScheduledStopPoint VEHICLE_MODE_ON_SCHEDULED_STOP_POINT = VehicleModeOnScheduledStopPoint.VEHICLE_MODE_ON_SCHEDULED_STOP_POINT;
}
