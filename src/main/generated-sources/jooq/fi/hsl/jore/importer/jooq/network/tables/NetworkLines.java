/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.importer.jooq.network.tables;


import fi.hsl.jore.importer.config.jooq.converter.time_range.TimeRange;
import fi.hsl.jore.importer.config.jooq.converter.time_range.TimeRangeBinding;
import fi.hsl.jore.importer.jooq.infrastructure_network.tables.InfrastructureNetworkTypes;
import fi.hsl.jore.importer.jooq.network.Keys;
import fi.hsl.jore.importer.jooq.network.Network;
import fi.hsl.jore.importer.jooq.network.tables.records.NetworkLinesRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NetworkLines extends TableImpl<NetworkLinesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>network.network_lines</code>
     */
    public static final NetworkLines NETWORK_LINES = new NetworkLines();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NetworkLinesRecord> getRecordType() {
        return NetworkLinesRecord.class;
    }

    /**
     * The column <code>network.network_lines.network_line_id</code>.
     */
    public final TableField<NetworkLinesRecord, UUID> NETWORK_LINE_ID = createField(DSL.name("network_line_id"), SQLDataType.UUID.nullable(false).defaultValue(DSL.field("gen_random_uuid()", SQLDataType.UUID)), this, "");

    /**
     * The column <code>network.network_lines.network_line_ext_id</code>.
     */
    public final TableField<NetworkLinesRecord, String> NETWORK_LINE_EXT_ID = createField(DSL.name("network_line_ext_id"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>network.network_lines.network_line_number</code>.
     */
    public final TableField<NetworkLinesRecord, String> NETWORK_LINE_NUMBER = createField(DSL.name("network_line_number"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>network.network_lines.infrastructure_network_type</code>.
     */
    public final TableField<NetworkLinesRecord, String> INFRASTRUCTURE_NETWORK_TYPE = createField(DSL.name("infrastructure_network_type"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>network.network_lines.network_line_sys_period</code>.
     */
    public final TableField<NetworkLinesRecord, TimeRange> NETWORK_LINE_SYS_PERIOD = createField(DSL.name("network_line_sys_period"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"tstzrange\"").nullable(false).defaultValue(DSL.field("tstzrange(CURRENT_TIMESTAMP, NULL::timestamp with time zone)", org.jooq.impl.SQLDataType.OTHER)), this, "", new TimeRangeBinding());

    /**
     * The column <code>network.network_lines.network_line_type_of_line</code>.
     */
    public final TableField<NetworkLinesRecord, String> NETWORK_LINE_TYPE_OF_LINE = createField(DSL.name("network_line_type_of_line"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>network.network_lines.network_line_legacy_hsl_municipality_code</code>.
     */
    public final TableField<NetworkLinesRecord, String> NETWORK_LINE_LEGACY_HSL_MUNICIPALITY_CODE = createField(DSL.name("network_line_legacy_hsl_municipality_code"), SQLDataType.CLOB, this, "");

    private NetworkLines(Name alias, Table<NetworkLinesRecord> aliased) {
        this(alias, aliased, null);
    }

    private NetworkLines(Name alias, Table<NetworkLinesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>network.network_lines</code> table reference
     */
    public NetworkLines(String alias) {
        this(DSL.name(alias), NETWORK_LINES);
    }

    /**
     * Create an aliased <code>network.network_lines</code> table reference
     */
    public NetworkLines(Name alias) {
        this(alias, NETWORK_LINES);
    }

    /**
     * Create a <code>network.network_lines</code> table reference
     */
    public NetworkLines() {
        this(DSL.name("network_lines"), null);
    }

    public <O extends Record> NetworkLines(Table<O> child, ForeignKey<O, NetworkLinesRecord> key) {
        super(child, key, NETWORK_LINES);
    }

    @Override
    public Schema getSchema() {
        return Network.NETWORK;
    }

    @Override
    public UniqueKey<NetworkLinesRecord> getPrimaryKey() {
        return Keys.NETWORK_LINES_PKEY;
    }

    @Override
    public List<UniqueKey<NetworkLinesRecord>> getKeys() {
        return Arrays.<UniqueKey<NetworkLinesRecord>>asList(Keys.NETWORK_LINES_PKEY);
    }

    @Override
    public List<ForeignKey<NetworkLinesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<NetworkLinesRecord, ?>>asList(Keys.NETWORK_LINES__NETWORK_LINES_INFRASTRUCTURE_NETWORK_TYPE_FKEY);
    }

    private transient InfrastructureNetworkTypes _infrastructureNetworkTypes;

    public InfrastructureNetworkTypes infrastructureNetworkTypes() {
        if (_infrastructureNetworkTypes == null)
            _infrastructureNetworkTypes = new InfrastructureNetworkTypes(this, Keys.NETWORK_LINES__NETWORK_LINES_INFRASTRUCTURE_NETWORK_TYPE_FKEY);

        return _infrastructureNetworkTypes;
    }

    @Override
    public NetworkLines as(String alias) {
        return new NetworkLines(DSL.name(alias), this);
    }

    @Override
    public NetworkLines as(Name alias) {
        return new NetworkLines(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public NetworkLines rename(String name) {
        return new NetworkLines(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public NetworkLines rename(Name name) {
        return new NetworkLines(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, String, String, String, TimeRange, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
