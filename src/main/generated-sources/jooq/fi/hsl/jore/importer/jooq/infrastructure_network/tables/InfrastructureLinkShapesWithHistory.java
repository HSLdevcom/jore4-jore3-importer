/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.importer.jooq.infrastructure_network.tables;


import fi.hsl.jore.importer.config.jooq.converter.geometry.LineStringBinding;
import fi.hsl.jore.importer.config.jooq.converter.time_range.TimeRange;
import fi.hsl.jore.importer.config.jooq.converter.time_range.TimeRangeBinding;
import fi.hsl.jore.importer.jooq.infrastructure_network.InfrastructureNetwork;
import fi.hsl.jore.importer.jooq.infrastructure_network.tables.records.InfrastructureLinkShapesWithHistoryRecord;

import java.util.Collection;
import java.util.UUID;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.PlainSQL;
import org.jooq.QueryPart;
import org.jooq.SQL;
import org.jooq.Schema;
import org.jooq.Select;
import org.jooq.Stringly;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.DefaultDataType;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.locationtech.jts.geom.LineString;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class InfrastructureLinkShapesWithHistory extends TableImpl<InfrastructureLinkShapesWithHistoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>infrastructure_network.infrastructure_link_shapes_with_history</code>
     */
    public static final InfrastructureLinkShapesWithHistory INFRASTRUCTURE_LINK_SHAPES_WITH_HISTORY = new InfrastructureLinkShapesWithHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InfrastructureLinkShapesWithHistoryRecord> getRecordType() {
        return InfrastructureLinkShapesWithHistoryRecord.class;
    }

    /**
     * The column
     * <code>infrastructure_network.infrastructure_link_shapes_with_history.infrastructure_link_shape_id</code>.
     */
    public final TableField<InfrastructureLinkShapesWithHistoryRecord, UUID> INFRASTRUCTURE_LINK_SHAPE_ID = createField(DSL.name("infrastructure_link_shape_id"), SQLDataType.UUID, this, "");

    /**
     * The column
     * <code>infrastructure_network.infrastructure_link_shapes_with_history.infrastructure_link_ext_id</code>.
     */
    public final TableField<InfrastructureLinkShapesWithHistoryRecord, String> INFRASTRUCTURE_LINK_EXT_ID = createField(DSL.name("infrastructure_link_ext_id"), SQLDataType.CLOB, this, "");

    /**
     * The column
     * <code>infrastructure_network.infrastructure_link_shapes_with_history.infrastructure_link_id</code>.
     */
    public final TableField<InfrastructureLinkShapesWithHistoryRecord, UUID> INFRASTRUCTURE_LINK_ID = createField(DSL.name("infrastructure_link_id"), SQLDataType.UUID, this, "");

    /**
     * The column
     * <code>infrastructure_network.infrastructure_link_shapes_with_history.infrastructure_link_shape</code>.
     */
    public final TableField<InfrastructureLinkShapesWithHistoryRecord, LineString> INFRASTRUCTURE_LINK_SHAPE = createField(DSL.name("infrastructure_link_shape"), SQLDataType.OTHER, this, "", new LineStringBinding());

    /**
     * The column
     * <code>infrastructure_network.infrastructure_link_shapes_with_history.infrastructure_link_shape_sys_period</code>.
     */
    public final TableField<InfrastructureLinkShapesWithHistoryRecord, TimeRange> INFRASTRUCTURE_LINK_SHAPE_SYS_PERIOD = createField(DSL.name("infrastructure_link_shape_sys_period"), DefaultDataType.getDefaultDataType("\"pg_catalog\".\"tstzrange\""), this, "", new TimeRangeBinding());

    private InfrastructureLinkShapesWithHistory(Name alias, Table<InfrastructureLinkShapesWithHistoryRecord> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private InfrastructureLinkShapesWithHistory(Name alias, Table<InfrastructureLinkShapesWithHistoryRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view("""
         create view "infrastructure_link_shapes_with_history" as  SELECT infrastructure_link_shapes.infrastructure_link_shape_id,
            infrastructure_link_shapes.infrastructure_link_ext_id,
            infrastructure_link_shapes.infrastructure_link_id,
            infrastructure_link_shapes.infrastructure_link_shape,
            infrastructure_link_shapes.infrastructure_link_shape_sys_period
           FROM infrastructure_network.infrastructure_link_shapes
        UNION ALL
         SELECT infrastructure_link_shapes_history.infrastructure_link_shape_id,
            infrastructure_link_shapes_history.infrastructure_link_ext_id,
            infrastructure_link_shapes_history.infrastructure_link_id,
            infrastructure_link_shapes_history.infrastructure_link_shape,
            infrastructure_link_shapes_history.infrastructure_link_shape_sys_period
           FROM infrastructure_network.infrastructure_link_shapes_history;
        """), where);
    }

    /**
     * Create an aliased
     * <code>infrastructure_network.infrastructure_link_shapes_with_history</code>
     * table reference
     */
    public InfrastructureLinkShapesWithHistory(String alias) {
        this(DSL.name(alias), INFRASTRUCTURE_LINK_SHAPES_WITH_HISTORY);
    }

    /**
     * Create an aliased
     * <code>infrastructure_network.infrastructure_link_shapes_with_history</code>
     * table reference
     */
    public InfrastructureLinkShapesWithHistory(Name alias) {
        this(alias, INFRASTRUCTURE_LINK_SHAPES_WITH_HISTORY);
    }

    /**
     * Create a
     * <code>infrastructure_network.infrastructure_link_shapes_with_history</code>
     * table reference
     */
    public InfrastructureLinkShapesWithHistory() {
        this(DSL.name("infrastructure_link_shapes_with_history"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : InfrastructureNetwork.INFRASTRUCTURE_NETWORK;
    }

    @Override
    public InfrastructureLinkShapesWithHistory as(String alias) {
        return new InfrastructureLinkShapesWithHistory(DSL.name(alias), this);
    }

    @Override
    public InfrastructureLinkShapesWithHistory as(Name alias) {
        return new InfrastructureLinkShapesWithHistory(alias, this);
    }

    @Override
    public InfrastructureLinkShapesWithHistory as(Table<?> alias) {
        return new InfrastructureLinkShapesWithHistory(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public InfrastructureLinkShapesWithHistory rename(String name) {
        return new InfrastructureLinkShapesWithHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InfrastructureLinkShapesWithHistory rename(Name name) {
        return new InfrastructureLinkShapesWithHistory(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public InfrastructureLinkShapesWithHistory rename(Table<?> name) {
        return new InfrastructureLinkShapesWithHistory(name.getQualifiedName(), null);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public InfrastructureLinkShapesWithHistory where(Condition condition) {
        return new InfrastructureLinkShapesWithHistory(getQualifiedName(), aliased() ? this : null, null, condition);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public InfrastructureLinkShapesWithHistory where(Collection<? extends Condition> conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public InfrastructureLinkShapesWithHistory where(Condition... conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public InfrastructureLinkShapesWithHistory where(Field<Boolean> condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public InfrastructureLinkShapesWithHistory where(SQL condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public InfrastructureLinkShapesWithHistory where(@Stringly.SQL String condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public InfrastructureLinkShapesWithHistory where(@Stringly.SQL String condition, Object... binds) {
        return where(DSL.condition(condition, binds));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public InfrastructureLinkShapesWithHistory where(@Stringly.SQL String condition, QueryPart... parts) {
        return where(DSL.condition(condition, parts));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public InfrastructureLinkShapesWithHistory whereExists(Select<?> select) {
        return where(DSL.exists(select));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public InfrastructureLinkShapesWithHistory whereNotExists(Select<?> select) {
        return where(DSL.notExists(select));
    }
}
