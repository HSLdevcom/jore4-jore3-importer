/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.importer.jooq.infrastructure_network.tables;


import fi.hsl.jore.importer.config.jooq.converter.geometry.LineStringBinding;
import fi.hsl.jore.importer.jooq.infrastructure_network.InfrastructureNetwork;
import fi.hsl.jore.importer.jooq.infrastructure_network.Keys;
import fi.hsl.jore.importer.jooq.infrastructure_network.tables.records.InfrastructureLinksStagingRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.locationtech.jts.geom.LineString;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InfrastructureLinksStaging extends TableImpl<InfrastructureLinksStagingRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>infrastructure_network.infrastructure_links_staging</code>
     */
    public static final InfrastructureLinksStaging INFRASTRUCTURE_LINKS_STAGING = new InfrastructureLinksStaging();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InfrastructureLinksStagingRecord> getRecordType() {
        return InfrastructureLinksStagingRecord.class;
    }

    /**
     * The column <code>infrastructure_network.infrastructure_links_staging.infrastructure_link_ext_id</code>.
     */
    public final TableField<InfrastructureLinksStagingRecord, String> INFRASTRUCTURE_LINK_EXT_ID = createField(DSL.name("infrastructure_link_ext_id"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>infrastructure_network.infrastructure_links_staging.infrastructure_link_geog</code>.
     */
    public final TableField<InfrastructureLinksStagingRecord, LineString> INFRASTRUCTURE_LINK_GEOG = createField(DSL.name("infrastructure_link_geog"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"geography\"").nullable(false), this, "", new LineStringBinding());

    /**
     * The column <code>infrastructure_network.infrastructure_links_staging.infrastructure_network_type</code>.
     */
    public final TableField<InfrastructureLinksStagingRecord, String> INFRASTRUCTURE_NETWORK_TYPE = createField(DSL.name("infrastructure_network_type"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>infrastructure_network.infrastructure_links_staging.infrastructure_link_start_node_ext_id</code>.
     */
    public final TableField<InfrastructureLinksStagingRecord, String> INFRASTRUCTURE_LINK_START_NODE_EXT_ID = createField(DSL.name("infrastructure_link_start_node_ext_id"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>infrastructure_network.infrastructure_links_staging.infrastructure_link_end_node_ext_id</code>.
     */
    public final TableField<InfrastructureLinksStagingRecord, String> INFRASTRUCTURE_LINK_END_NODE_EXT_ID = createField(DSL.name("infrastructure_link_end_node_ext_id"), SQLDataType.CLOB.nullable(false), this, "");

    private InfrastructureLinksStaging(Name alias, Table<InfrastructureLinksStagingRecord> aliased) {
        this(alias, aliased, null);
    }

    private InfrastructureLinksStaging(Name alias, Table<InfrastructureLinksStagingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>infrastructure_network.infrastructure_links_staging</code> table reference
     */
    public InfrastructureLinksStaging(String alias) {
        this(DSL.name(alias), INFRASTRUCTURE_LINKS_STAGING);
    }

    /**
     * Create an aliased <code>infrastructure_network.infrastructure_links_staging</code> table reference
     */
    public InfrastructureLinksStaging(Name alias) {
        this(alias, INFRASTRUCTURE_LINKS_STAGING);
    }

    /**
     * Create a <code>infrastructure_network.infrastructure_links_staging</code> table reference
     */
    public InfrastructureLinksStaging() {
        this(DSL.name("infrastructure_links_staging"), null);
    }

    public <O extends Record> InfrastructureLinksStaging(Table<O> child, ForeignKey<O, InfrastructureLinksStagingRecord> key) {
        super(child, key, INFRASTRUCTURE_LINKS_STAGING);
    }

    @Override
    public Schema getSchema() {
        return InfrastructureNetwork.INFRASTRUCTURE_NETWORK;
    }

    @Override
    public UniqueKey<InfrastructureLinksStagingRecord> getPrimaryKey() {
        return Keys.INFRASTRUCTURE_LINKS_STAGING_PKEY;
    }

    @Override
    public List<UniqueKey<InfrastructureLinksStagingRecord>> getKeys() {
        return Arrays.<UniqueKey<InfrastructureLinksStagingRecord>>asList(Keys.INFRASTRUCTURE_LINKS_STAGING_PKEY);
    }

    @Override
    public List<ForeignKey<InfrastructureLinksStagingRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<InfrastructureLinksStagingRecord, ?>>asList(Keys.INFRASTRUCTURE_LINKS_STAGING__INFRASTRUCTURE_LINKS_STAGING_INFRASTRUCTURE_NETWORK_TYPE_FKEY);
    }

    private transient InfrastructureNetworkTypes _infrastructureNetworkTypes;

    public InfrastructureNetworkTypes infrastructureNetworkTypes() {
        if (_infrastructureNetworkTypes == null)
            _infrastructureNetworkTypes = new InfrastructureNetworkTypes(this, Keys.INFRASTRUCTURE_LINKS_STAGING__INFRASTRUCTURE_LINKS_STAGING_INFRASTRUCTURE_NETWORK_TYPE_FKEY);

        return _infrastructureNetworkTypes;
    }

    @Override
    public InfrastructureLinksStaging as(String alias) {
        return new InfrastructureLinksStaging(DSL.name(alias), this);
    }

    @Override
    public InfrastructureLinksStaging as(Name alias) {
        return new InfrastructureLinksStaging(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InfrastructureLinksStaging rename(String name) {
        return new InfrastructureLinksStaging(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InfrastructureLinksStaging rename(Name name) {
        return new InfrastructureLinksStaging(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, LineString, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
