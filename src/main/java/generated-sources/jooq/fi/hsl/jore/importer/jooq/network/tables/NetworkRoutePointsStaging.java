/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.importer.jooq.network.tables;


import fi.hsl.jore.importer.jooq.network.Keys;
import fi.hsl.jore.importer.jooq.network.Network;
import fi.hsl.jore.importer.jooq.network.tables.records.NetworkRoutePointsStagingRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NetworkRoutePointsStaging extends TableImpl<NetworkRoutePointsStagingRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>network.network_route_points_staging</code>
     */
    public static final NetworkRoutePointsStaging NETWORK_ROUTE_POINTS_STAGING = new NetworkRoutePointsStaging();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NetworkRoutePointsStagingRecord> getRecordType() {
        return NetworkRoutePointsStagingRecord.class;
    }

    /**
     * The column <code>network.network_route_points_staging.network_route_point_ext_id</code>.
     */
    public final TableField<NetworkRoutePointsStagingRecord, String> NETWORK_ROUTE_POINT_EXT_ID = createField(DSL.name("network_route_point_ext_id"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>network.network_route_points_staging.network_route_direction_ext_id</code>.
     */
    public final TableField<NetworkRoutePointsStagingRecord, String> NETWORK_ROUTE_DIRECTION_EXT_ID = createField(DSL.name("network_route_direction_ext_id"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>network.network_route_points_staging.infrastructure_node_ext_id</code>.
     */
    public final TableField<NetworkRoutePointsStagingRecord, String> INFRASTRUCTURE_NODE_EXT_ID = createField(DSL.name("infrastructure_node_ext_id"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>network.network_route_points_staging.network_route_point_order</code>.
     */
    public final TableField<NetworkRoutePointsStagingRecord, Integer> NETWORK_ROUTE_POINT_ORDER = createField(DSL.name("network_route_point_order"), SQLDataType.INTEGER.nullable(false), this, "");

    private NetworkRoutePointsStaging(Name alias, Table<NetworkRoutePointsStagingRecord> aliased) {
        this(alias, aliased, null);
    }

    private NetworkRoutePointsStaging(Name alias, Table<NetworkRoutePointsStagingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>network.network_route_points_staging</code> table reference
     */
    public NetworkRoutePointsStaging(String alias) {
        this(DSL.name(alias), NETWORK_ROUTE_POINTS_STAGING);
    }

    /**
     * Create an aliased <code>network.network_route_points_staging</code> table reference
     */
    public NetworkRoutePointsStaging(Name alias) {
        this(alias, NETWORK_ROUTE_POINTS_STAGING);
    }

    /**
     * Create a <code>network.network_route_points_staging</code> table reference
     */
    public NetworkRoutePointsStaging() {
        this(DSL.name("network_route_points_staging"), null);
    }

    public <O extends Record> NetworkRoutePointsStaging(Table<O> child, ForeignKey<O, NetworkRoutePointsStagingRecord> key) {
        super(child, key, NETWORK_ROUTE_POINTS_STAGING);
    }

    @Override
    public Schema getSchema() {
        return Network.NETWORK;
    }

    @Override
    public UniqueKey<NetworkRoutePointsStagingRecord> getPrimaryKey() {
        return Keys.NETWORK_ROUTE_POINTS_STAGING_PKEY;
    }

    @Override
    public List<UniqueKey<NetworkRoutePointsStagingRecord>> getKeys() {
        return Arrays.<UniqueKey<NetworkRoutePointsStagingRecord>>asList(Keys.NETWORK_ROUTE_POINTS_STAGING_PKEY);
    }

    @Override
    public NetworkRoutePointsStaging as(String alias) {
        return new NetworkRoutePointsStaging(DSL.name(alias), this);
    }

    @Override
    public NetworkRoutePointsStaging as(Name alias) {
        return new NetworkRoutePointsStaging(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public NetworkRoutePointsStaging rename(String name) {
        return new NetworkRoutePointsStaging(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public NetworkRoutePointsStaging rename(Name name) {
        return new NetworkRoutePointsStaging(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
