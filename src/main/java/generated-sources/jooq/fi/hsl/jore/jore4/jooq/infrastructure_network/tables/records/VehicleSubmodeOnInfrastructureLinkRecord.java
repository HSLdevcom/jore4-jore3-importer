/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.infrastructure_network.tables.records;


import fi.hsl.jore.jore4.jooq.infrastructure_network.tables.VehicleSubmodeOnInfrastructureLink;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Which infrastructure links are safely traversed by which vehicle submodes?
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VehicleSubmodeOnInfrastructureLinkRecord extends UpdatableRecordImpl<VehicleSubmodeOnInfrastructureLinkRecord> implements Record2<UUID, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>infrastructure_network.vehicle_submode_on_infrastructure_link.infrastructure_link_id</code>. The infrastructure link that can be safely traversed by the vehicle submode.
     */
    public void setInfrastructureLinkId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>infrastructure_network.vehicle_submode_on_infrastructure_link.infrastructure_link_id</code>. The infrastructure link that can be safely traversed by the vehicle submode.
     */
    public UUID getInfrastructureLinkId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>infrastructure_network.vehicle_submode_on_infrastructure_link.vehicle_submode</code>. The vehicle submode that can safely traverse the infrastructure link.
     */
    public void setVehicleSubmode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>infrastructure_network.vehicle_submode_on_infrastructure_link.vehicle_submode</code>. The vehicle submode that can safely traverse the infrastructure link.
     */
    public String getVehicleSubmode() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UUID, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return VehicleSubmodeOnInfrastructureLink.VEHICLE_SUBMODE_ON_INFRASTRUCTURE_LINK.INFRASTRUCTURE_LINK_ID;
    }

    @Override
    public Field<String> field2() {
        return VehicleSubmodeOnInfrastructureLink.VEHICLE_SUBMODE_ON_INFRASTRUCTURE_LINK.VEHICLE_SUBMODE;
    }

    @Override
    public UUID component1() {
        return getInfrastructureLinkId();
    }

    @Override
    public String component2() {
        return getVehicleSubmode();
    }

    @Override
    public UUID value1() {
        return getInfrastructureLinkId();
    }

    @Override
    public String value2() {
        return getVehicleSubmode();
    }

    @Override
    public VehicleSubmodeOnInfrastructureLinkRecord value1(UUID value) {
        setInfrastructureLinkId(value);
        return this;
    }

    @Override
    public VehicleSubmodeOnInfrastructureLinkRecord value2(String value) {
        setVehicleSubmode(value);
        return this;
    }

    @Override
    public VehicleSubmodeOnInfrastructureLinkRecord values(UUID value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VehicleSubmodeOnInfrastructureLinkRecord
     */
    public VehicleSubmodeOnInfrastructureLinkRecord() {
        super(VehicleSubmodeOnInfrastructureLink.VEHICLE_SUBMODE_ON_INFRASTRUCTURE_LINK);
    }

    /**
     * Create a detached, initialised VehicleSubmodeOnInfrastructureLinkRecord
     */
    public VehicleSubmodeOnInfrastructureLinkRecord(UUID infrastructureLinkId, String vehicleSubmode) {
        super(VehicleSubmodeOnInfrastructureLink.VEHICLE_SUBMODE_ON_INFRASTRUCTURE_LINK);

        setInfrastructureLinkId(infrastructureLinkId);
        setVehicleSubmode(vehicleSubmode);
    }
}
