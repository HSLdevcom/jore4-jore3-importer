/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.infrastructure_network;


import fi.hsl.jore.jore4.jooq.infrastructure_network.tables.Direction;
import fi.hsl.jore.jore4.jooq.infrastructure_network.tables.ExternalSource;
import fi.hsl.jore.jore4.jooq.infrastructure_network.tables.InfrastructureLink;
import fi.hsl.jore.jore4.jooq.infrastructure_network.tables.VehicleSubmodeOnInfrastructureLink;
import fi.hsl.jore.jore4.jooq.infrastructure_network.tables.records.DirectionRecord;
import fi.hsl.jore.jore4.jooq.infrastructure_network.tables.records.ExternalSourceRecord;
import fi.hsl.jore.jore4.jooq.infrastructure_network.tables.records.InfrastructureLinkRecord;
import fi.hsl.jore.jore4.jooq.infrastructure_network.tables.records.VehicleSubmodeOnInfrastructureLinkRecord;
import fi.hsl.jore.jore4.jooq.reusable_components.tables.VehicleSubmode;
import fi.hsl.jore.jore4.jooq.reusable_components.tables.records.VehicleSubmodeRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * infrastructure_network.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DirectionRecord> DIRECTION_PKEY = Internal.createUniqueKey(Direction.DIRECTION, DSL.name("direction_pkey"), new TableField[] { Direction.DIRECTION.VALUE }, true);
    public static final UniqueKey<ExternalSourceRecord> EXTERNAL_SOURCE_PKEY = Internal.createUniqueKey(ExternalSource.EXTERNAL_SOURCE, DSL.name("external_source_pkey"), new TableField[] { ExternalSource.EXTERNAL_SOURCE.VALUE }, true);
    public static final UniqueKey<InfrastructureLinkRecord> INFRASTRUCTURE_LINK_PKEY = Internal.createUniqueKey(InfrastructureLink.INFRASTRUCTURE_LINK, DSL.name("infrastructure_link_pkey"), new TableField[] { InfrastructureLink.INFRASTRUCTURE_LINK.INFRASTRUCTURE_LINK_ID }, true);
    public static final UniqueKey<VehicleSubmodeOnInfrastructureLinkRecord> VEHICLE_SUBMODE_ON_INFRASTRUCTURE_LINK_PKEY = Internal.createUniqueKey(VehicleSubmodeOnInfrastructureLink.VEHICLE_SUBMODE_ON_INFRASTRUCTURE_LINK, DSL.name("vehicle_submode_on_infrastructure_link_pkey"), new TableField[] { VehicleSubmodeOnInfrastructureLink.VEHICLE_SUBMODE_ON_INFRASTRUCTURE_LINK.INFRASTRUCTURE_LINK_ID, VehicleSubmodeOnInfrastructureLink.VEHICLE_SUBMODE_ON_INFRASTRUCTURE_LINK.VEHICLE_SUBMODE }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<InfrastructureLinkRecord, DirectionRecord> INFRASTRUCTURE_LINK__INFRASTRUCTURE_LINK_DIRECTION_FKEY = Internal.createForeignKey(InfrastructureLink.INFRASTRUCTURE_LINK, DSL.name("infrastructure_link_direction_fkey"), new TableField[] { InfrastructureLink.INFRASTRUCTURE_LINK.DIRECTION }, Keys.DIRECTION_PKEY, new TableField[] { Direction.DIRECTION.VALUE }, true);
    public static final ForeignKey<InfrastructureLinkRecord, ExternalSourceRecord> INFRASTRUCTURE_LINK__INFRASTRUCTURE_LINK_EXTERNAL_LINK_SOURCE_FKEY = Internal.createForeignKey(InfrastructureLink.INFRASTRUCTURE_LINK, DSL.name("infrastructure_link_external_link_source_fkey"), new TableField[] { InfrastructureLink.INFRASTRUCTURE_LINK.EXTERNAL_LINK_SOURCE }, Keys.EXTERNAL_SOURCE_PKEY, new TableField[] { ExternalSource.EXTERNAL_SOURCE.VALUE }, true);
    public static final ForeignKey<VehicleSubmodeOnInfrastructureLinkRecord, InfrastructureLinkRecord> VEHICLE_SUBMODE_ON_INFRASTRUCTURE_LINK__VEHICLE_SUBMODE_ON_INFRASTRUCTURE_LINK_INFRASTRUCTURE_LINK_ID_F = Internal.createForeignKey(VehicleSubmodeOnInfrastructureLink.VEHICLE_SUBMODE_ON_INFRASTRUCTURE_LINK, DSL.name("vehicle_submode_on_infrastructure_link_infrastructure_link_id_f"), new TableField[] { VehicleSubmodeOnInfrastructureLink.VEHICLE_SUBMODE_ON_INFRASTRUCTURE_LINK.INFRASTRUCTURE_LINK_ID }, Keys.INFRASTRUCTURE_LINK_PKEY, new TableField[] { InfrastructureLink.INFRASTRUCTURE_LINK.INFRASTRUCTURE_LINK_ID }, true);
    public static final ForeignKey<VehicleSubmodeOnInfrastructureLinkRecord, VehicleSubmodeRecord> VEHICLE_SUBMODE_ON_INFRASTRUCTURE_LINK__VEHICLE_SUBMODE_ON_INFRASTRUCTURE_LINK_VEHICLE_SUBMODE_FKEY = Internal.createForeignKey(VehicleSubmodeOnInfrastructureLink.VEHICLE_SUBMODE_ON_INFRASTRUCTURE_LINK, DSL.name("vehicle_submode_on_infrastructure_link_vehicle_submode_fkey"), new TableField[] { VehicleSubmodeOnInfrastructureLink.VEHICLE_SUBMODE_ON_INFRASTRUCTURE_LINK.VEHICLE_SUBMODE }, fi.hsl.jore.jore4.jooq.reusable_components.Keys.VEHICLE_SUBMODE_PKEY, new TableField[] { VehicleSubmode.VEHICLE_SUBMODE.VEHICLE_SUBMODE_ }, true);
}
