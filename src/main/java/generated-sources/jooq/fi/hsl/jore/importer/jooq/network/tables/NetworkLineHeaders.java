/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.importer.jooq.network.tables;


import fi.hsl.jore.importer.config.jooq.converter.date_range.DateRange;
import fi.hsl.jore.importer.config.jooq.converter.date_range.DateRangeBinding;
import fi.hsl.jore.importer.config.jooq.converter.time_range.TimeRange;
import fi.hsl.jore.importer.config.jooq.converter.time_range.TimeRangeBinding;
import fi.hsl.jore.importer.jooq.network.Keys;
import fi.hsl.jore.importer.jooq.network.Network;
import fi.hsl.jore.importer.jooq.network.tables.records.NetworkLineHeadersRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.JSONB;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NetworkLineHeaders extends TableImpl<NetworkLineHeadersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>network.network_line_headers</code>
     */
    public static final NetworkLineHeaders NETWORK_LINE_HEADERS = new NetworkLineHeaders();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NetworkLineHeadersRecord> getRecordType() {
        return NetworkLineHeadersRecord.class;
    }

    /**
     * The column <code>network.network_line_headers.network_line_header_id</code>.
     */
    public final TableField<NetworkLineHeadersRecord, UUID> NETWORK_LINE_HEADER_ID = createField(DSL.name("network_line_header_id"), SQLDataType.UUID.nullable(false).defaultValue(DSL.field("gen_random_uuid()", SQLDataType.UUID)), this, "");

    /**
     * The column <code>network.network_line_headers.network_line_id</code>.
     */
    public final TableField<NetworkLineHeadersRecord, UUID> NETWORK_LINE_ID = createField(DSL.name("network_line_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>network.network_line_headers.network_line_header_ext_id</code>.
     */
    public final TableField<NetworkLineHeadersRecord, String> NETWORK_LINE_HEADER_EXT_ID = createField(DSL.name("network_line_header_ext_id"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>network.network_line_headers.network_line_header_name</code>.
     */
    public final TableField<NetworkLineHeadersRecord, JSONB> NETWORK_LINE_HEADER_NAME = createField(DSL.name("network_line_header_name"), SQLDataType.JSONB.nullable(false), this, "");

    /**
     * The column <code>network.network_line_headers.network_line_header_name_short</code>.
     */
    public final TableField<NetworkLineHeadersRecord, JSONB> NETWORK_LINE_HEADER_NAME_SHORT = createField(DSL.name("network_line_header_name_short"), SQLDataType.JSONB.nullable(false), this, "");

    /**
     * The column <code>network.network_line_headers.network_line_header_origin_1</code>.
     */
    public final TableField<NetworkLineHeadersRecord, JSONB> NETWORK_LINE_HEADER_ORIGIN_1 = createField(DSL.name("network_line_header_origin_1"), SQLDataType.JSONB.nullable(false), this, "");

    /**
     * The column <code>network.network_line_headers.network_line_header_origin_2</code>.
     */
    public final TableField<NetworkLineHeadersRecord, JSONB> NETWORK_LINE_HEADER_ORIGIN_2 = createField(DSL.name("network_line_header_origin_2"), SQLDataType.JSONB.nullable(false), this, "");

    /**
     * The column <code>network.network_line_headers.network_line_header_valid_date_range</code>.
     */
    public final TableField<NetworkLineHeadersRecord, DateRange> NETWORK_LINE_HEADER_VALID_DATE_RANGE = createField(DSL.name("network_line_header_valid_date_range"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"daterange\"").nullable(false), this, "", new DateRangeBinding());

    /**
     * The column <code>network.network_line_headers.network_line_header_sys_period</code>.
     */
    public final TableField<NetworkLineHeadersRecord, TimeRange> NETWORK_LINE_HEADER_SYS_PERIOD = createField(DSL.name("network_line_header_sys_period"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"tstzrange\"").nullable(false).defaultValue(DSL.field("tstzrange(CURRENT_TIMESTAMP, NULL::timestamp with time zone)", org.jooq.impl.SQLDataType.OTHER)), this, "", new TimeRangeBinding());

    private NetworkLineHeaders(Name alias, Table<NetworkLineHeadersRecord> aliased) {
        this(alias, aliased, null);
    }

    private NetworkLineHeaders(Name alias, Table<NetworkLineHeadersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>network.network_line_headers</code> table reference
     */
    public NetworkLineHeaders(String alias) {
        this(DSL.name(alias), NETWORK_LINE_HEADERS);
    }

    /**
     * Create an aliased <code>network.network_line_headers</code> table reference
     */
    public NetworkLineHeaders(Name alias) {
        this(alias, NETWORK_LINE_HEADERS);
    }

    /**
     * Create a <code>network.network_line_headers</code> table reference
     */
    public NetworkLineHeaders() {
        this(DSL.name("network_line_headers"), null);
    }

    public <O extends Record> NetworkLineHeaders(Table<O> child, ForeignKey<O, NetworkLineHeadersRecord> key) {
        super(child, key, NETWORK_LINE_HEADERS);
    }

    @Override
    public Schema getSchema() {
        return Network.NETWORK;
    }

    @Override
    public UniqueKey<NetworkLineHeadersRecord> getPrimaryKey() {
        return Keys.NETWORK_LINE_HEADERS_PKEY;
    }

    @Override
    public List<UniqueKey<NetworkLineHeadersRecord>> getKeys() {
        return Arrays.<UniqueKey<NetworkLineHeadersRecord>>asList(Keys.NETWORK_LINE_HEADERS_PKEY);
    }

    @Override
    public List<ForeignKey<NetworkLineHeadersRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<NetworkLineHeadersRecord, ?>>asList(Keys.NETWORK_LINE_HEADERS__NETWORK_LINE_HEADERS_NETWORK_LINE_ID_FKEY);
    }

    private transient NetworkLines _networkLines;

    public NetworkLines networkLines() {
        if (_networkLines == null)
            _networkLines = new NetworkLines(this, Keys.NETWORK_LINE_HEADERS__NETWORK_LINE_HEADERS_NETWORK_LINE_ID_FKEY);

        return _networkLines;
    }

    @Override
    public NetworkLineHeaders as(String alias) {
        return new NetworkLineHeaders(DSL.name(alias), this);
    }

    @Override
    public NetworkLineHeaders as(Name alias) {
        return new NetworkLineHeaders(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public NetworkLineHeaders rename(String name) {
        return new NetworkLineHeaders(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public NetworkLineHeaders rename(Name name) {
        return new NetworkLineHeaders(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<UUID, UUID, String, JSONB, JSONB, JSONB, JSONB, DateRange, TimeRange> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
