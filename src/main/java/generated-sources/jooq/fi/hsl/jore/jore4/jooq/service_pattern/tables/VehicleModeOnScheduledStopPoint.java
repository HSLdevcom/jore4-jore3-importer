/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.service_pattern.tables;


import fi.hsl.jore.jore4.jooq.internal_service_pattern.tables.ScheduledStopPoint;
import fi.hsl.jore.jore4.jooq.reusable_components.tables.VehicleMode;
import fi.hsl.jore.jore4.jooq.service_pattern.Keys;
import fi.hsl.jore.jore4.jooq.service_pattern.ServicePattern;
import fi.hsl.jore.jore4.jooq.service_pattern.tables.records.VehicleModeOnScheduledStopPointRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * Which scheduled stop points are serviced by which vehicle modes?
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VehicleModeOnScheduledStopPoint extends TableImpl<VehicleModeOnScheduledStopPointRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>service_pattern.vehicle_mode_on_scheduled_stop_point</code>
     */
    public static final VehicleModeOnScheduledStopPoint VEHICLE_MODE_ON_SCHEDULED_STOP_POINT = new VehicleModeOnScheduledStopPoint();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VehicleModeOnScheduledStopPointRecord> getRecordType() {
        return VehicleModeOnScheduledStopPointRecord.class;
    }

    /**
     * The column <code>service_pattern.vehicle_mode_on_scheduled_stop_point.scheduled_stop_point_id</code>. The scheduled stop point that is serviced by the vehicle mode.
     */
    public final TableField<VehicleModeOnScheduledStopPointRecord, UUID> SCHEDULED_STOP_POINT_ID = createField(DSL.name("scheduled_stop_point_id"), SQLDataType.UUID.nullable(false), this, "The scheduled stop point that is serviced by the vehicle mode.");

    /**
     * The column <code>service_pattern.vehicle_mode_on_scheduled_stop_point.vehicle_mode</code>. The vehicle mode servicing the scheduled stop point.
     */
    public final TableField<VehicleModeOnScheduledStopPointRecord, String> VEHICLE_MODE = createField(DSL.name("vehicle_mode"), SQLDataType.CLOB.nullable(false), this, "The vehicle mode servicing the scheduled stop point.");

    private VehicleModeOnScheduledStopPoint(Name alias, Table<VehicleModeOnScheduledStopPointRecord> aliased) {
        this(alias, aliased, null);
    }

    private VehicleModeOnScheduledStopPoint(Name alias, Table<VehicleModeOnScheduledStopPointRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Which scheduled stop points are serviced by which vehicle modes?"), TableOptions.table());
    }

    /**
     * Create an aliased <code>service_pattern.vehicle_mode_on_scheduled_stop_point</code> table reference
     */
    public VehicleModeOnScheduledStopPoint(String alias) {
        this(DSL.name(alias), VEHICLE_MODE_ON_SCHEDULED_STOP_POINT);
    }

    /**
     * Create an aliased <code>service_pattern.vehicle_mode_on_scheduled_stop_point</code> table reference
     */
    public VehicleModeOnScheduledStopPoint(Name alias) {
        this(alias, VEHICLE_MODE_ON_SCHEDULED_STOP_POINT);
    }

    /**
     * Create a <code>service_pattern.vehicle_mode_on_scheduled_stop_point</code> table reference
     */
    public VehicleModeOnScheduledStopPoint() {
        this(DSL.name("vehicle_mode_on_scheduled_stop_point"), null);
    }

    public <O extends Record> VehicleModeOnScheduledStopPoint(Table<O> child, ForeignKey<O, VehicleModeOnScheduledStopPointRecord> key) {
        super(child, key, VEHICLE_MODE_ON_SCHEDULED_STOP_POINT);
    }

    @Override
    public Schema getSchema() {
        return ServicePattern.SERVICE_PATTERN;
    }

    @Override
    public UniqueKey<VehicleModeOnScheduledStopPointRecord> getPrimaryKey() {
        return Keys.SCHEDULED_STOP_POINT_SERVICED_BY_VEHICLE_MODE_PKEY;
    }

    @Override
    public List<UniqueKey<VehicleModeOnScheduledStopPointRecord>> getKeys() {
        return Arrays.<UniqueKey<VehicleModeOnScheduledStopPointRecord>>asList(Keys.SCHEDULED_STOP_POINT_SERVICED_BY_VEHICLE_MODE_PKEY);
    }

    @Override
    public List<ForeignKey<VehicleModeOnScheduledStopPointRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<VehicleModeOnScheduledStopPointRecord, ?>>asList(Keys.VEHICLE_MODE_ON_SCHEDULED_STOP_POINT__VEHICLE_MODE_ON_SCHEDULED_STOP_POINT_SCHEDULED_STOP_POINT_ID_FK, Keys.VEHICLE_MODE_ON_SCHEDULED_STOP_POINT__SCHEDULED_STOP_POINT_SERVICED_BY_VEHICLE_MODE_VEHICLE_MODE_FKEY);
    }

    private transient ScheduledStopPoint _scheduledStopPoint;
    private transient VehicleMode _vehicleMode;

    public ScheduledStopPoint scheduledStopPoint() {
        if (_scheduledStopPoint == null)
            _scheduledStopPoint = new ScheduledStopPoint(this, Keys.VEHICLE_MODE_ON_SCHEDULED_STOP_POINT__VEHICLE_MODE_ON_SCHEDULED_STOP_POINT_SCHEDULED_STOP_POINT_ID_FK);

        return _scheduledStopPoint;
    }

    public VehicleMode vehicleMode() {
        if (_vehicleMode == null)
            _vehicleMode = new VehicleMode(this, Keys.VEHICLE_MODE_ON_SCHEDULED_STOP_POINT__SCHEDULED_STOP_POINT_SERVICED_BY_VEHICLE_MODE_VEHICLE_MODE_FKEY);

        return _vehicleMode;
    }

    @Override
    public VehicleModeOnScheduledStopPoint as(String alias) {
        return new VehicleModeOnScheduledStopPoint(DSL.name(alias), this);
    }

    @Override
    public VehicleModeOnScheduledStopPoint as(Name alias) {
        return new VehicleModeOnScheduledStopPoint(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VehicleModeOnScheduledStopPoint rename(String name) {
        return new VehicleModeOnScheduledStopPoint(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VehicleModeOnScheduledStopPoint rename(Name name) {
        return new VehicleModeOnScheduledStopPoint(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
