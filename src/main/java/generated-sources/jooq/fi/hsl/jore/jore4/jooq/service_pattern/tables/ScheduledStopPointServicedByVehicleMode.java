/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.service_pattern.tables;


import fi.hsl.jore.jore4.jooq.internal_service_pattern.tables.ScheduledStopPoint;
import fi.hsl.jore.jore4.jooq.reusable_components.tables.VehicleMode;
import fi.hsl.jore.jore4.jooq.service_pattern.Keys;
import fi.hsl.jore.jore4.jooq.service_pattern.ServicePattern;
import fi.hsl.jore.jore4.jooq.service_pattern.tables.records.ScheduledStopPointServicedByVehicleModeRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * Which scheduled stop points are serviced by which vehicle modes?
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScheduledStopPointServicedByVehicleMode extends TableImpl<ScheduledStopPointServicedByVehicleModeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>service_pattern.scheduled_stop_point_serviced_by_vehicle_mode</code>
     */
    public static final ScheduledStopPointServicedByVehicleMode SCHEDULED_STOP_POINT_SERVICED_BY_VEHICLE_MODE = new ScheduledStopPointServicedByVehicleMode();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ScheduledStopPointServicedByVehicleModeRecord> getRecordType() {
        return ScheduledStopPointServicedByVehicleModeRecord.class;
    }

    /**
     * The column <code>service_pattern.scheduled_stop_point_serviced_by_vehicle_mode.scheduled_stop_point_id</code>. The scheduled stop point that is serviced by the vehicle mode.
     */
    public final TableField<ScheduledStopPointServicedByVehicleModeRecord, UUID> SCHEDULED_STOP_POINT_ID = createField(DSL.name("scheduled_stop_point_id"), SQLDataType.UUID.nullable(false), this, "The scheduled stop point that is serviced by the vehicle mode.");

    /**
     * The column <code>service_pattern.scheduled_stop_point_serviced_by_vehicle_mode.vehicle_mode</code>. The vehicle mode servicing the scheduled stop point.
     */
    public final TableField<ScheduledStopPointServicedByVehicleModeRecord, String> VEHICLE_MODE = createField(DSL.name("vehicle_mode"), SQLDataType.CLOB.nullable(false), this, "The vehicle mode servicing the scheduled stop point.");

    private ScheduledStopPointServicedByVehicleMode(Name alias, Table<ScheduledStopPointServicedByVehicleModeRecord> aliased) {
        this(alias, aliased, null);
    }

    private ScheduledStopPointServicedByVehicleMode(Name alias, Table<ScheduledStopPointServicedByVehicleModeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Which scheduled stop points are serviced by which vehicle modes?"), TableOptions.table());
    }

    /**
     * Create an aliased <code>service_pattern.scheduled_stop_point_serviced_by_vehicle_mode</code> table reference
     */
    public ScheduledStopPointServicedByVehicleMode(String alias) {
        this(DSL.name(alias), SCHEDULED_STOP_POINT_SERVICED_BY_VEHICLE_MODE);
    }

    /**
     * Create an aliased <code>service_pattern.scheduled_stop_point_serviced_by_vehicle_mode</code> table reference
     */
    public ScheduledStopPointServicedByVehicleMode(Name alias) {
        this(alias, SCHEDULED_STOP_POINT_SERVICED_BY_VEHICLE_MODE);
    }

    /**
     * Create a <code>service_pattern.scheduled_stop_point_serviced_by_vehicle_mode</code> table reference
     */
    public ScheduledStopPointServicedByVehicleMode() {
        this(DSL.name("scheduled_stop_point_serviced_by_vehicle_mode"), null);
    }

    public <O extends Record> ScheduledStopPointServicedByVehicleMode(Table<O> child, ForeignKey<O, ScheduledStopPointServicedByVehicleModeRecord> key) {
        super(child, key, SCHEDULED_STOP_POINT_SERVICED_BY_VEHICLE_MODE);
    }

    @Override
    public Schema getSchema() {
        return ServicePattern.SERVICE_PATTERN;
    }

    @Override
    public UniqueKey<ScheduledStopPointServicedByVehicleModeRecord> getPrimaryKey() {
        return Keys.SCHEDULED_STOP_POINT_SERVICED_BY_VEHICLE_MODE_PKEY;
    }

    @Override
    public List<UniqueKey<ScheduledStopPointServicedByVehicleModeRecord>> getKeys() {
        return Arrays.<UniqueKey<ScheduledStopPointServicedByVehicleModeRecord>>asList(Keys.SCHEDULED_STOP_POINT_SERVICED_BY_VEHICLE_MODE_PKEY);
    }

    @Override
    public List<ForeignKey<ScheduledStopPointServicedByVehicleModeRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ScheduledStopPointServicedByVehicleModeRecord, ?>>asList(Keys.SCHEDULED_STOP_POINT_SERVICED_BY_VEHICLE_MODE__SCHEDULED_STOP_POINT_SERVICED_BY_V_SCHEDULED_STOP_POINT_ID_FKEY, Keys.SCHEDULED_STOP_POINT_SERVICED_BY_VEHICLE_MODE__SCHEDULED_STOP_POINT_SERVICED_BY_VEHICLE_MODE_VEHICLE_MODE_FKEY);
    }

    private transient ScheduledStopPoint _scheduledStopPoint;
    private transient VehicleMode _vehicleMode;

    public ScheduledStopPoint scheduledStopPoint() {
        if (_scheduledStopPoint == null)
            _scheduledStopPoint = new ScheduledStopPoint(this, Keys.SCHEDULED_STOP_POINT_SERVICED_BY_VEHICLE_MODE__SCHEDULED_STOP_POINT_SERVICED_BY_V_SCHEDULED_STOP_POINT_ID_FKEY);

        return _scheduledStopPoint;
    }

    public VehicleMode vehicleMode() {
        if (_vehicleMode == null)
            _vehicleMode = new VehicleMode(this, Keys.SCHEDULED_STOP_POINT_SERVICED_BY_VEHICLE_MODE__SCHEDULED_STOP_POINT_SERVICED_BY_VEHICLE_MODE_VEHICLE_MODE_FKEY);

        return _vehicleMode;
    }

    @Override
    public ScheduledStopPointServicedByVehicleMode as(String alias) {
        return new ScheduledStopPointServicedByVehicleMode(DSL.name(alias), this);
    }

    @Override
    public ScheduledStopPointServicedByVehicleMode as(Name alias) {
        return new ScheduledStopPointServicedByVehicleMode(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ScheduledStopPointServicedByVehicleMode rename(String name) {
        return new ScheduledStopPointServicedByVehicleMode(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ScheduledStopPointServicedByVehicleMode rename(Name name) {
        return new ScheduledStopPointServicedByVehicleMode(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
