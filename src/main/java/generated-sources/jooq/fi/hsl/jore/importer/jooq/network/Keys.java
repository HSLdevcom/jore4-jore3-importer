/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.importer.jooq.network;


import fi.hsl.jore.importer.jooq.infrastructure_network.tables.InfrastructureNetworkTypes;
import fi.hsl.jore.importer.jooq.infrastructure_network.tables.records.InfrastructureNetworkTypesRecord;
import fi.hsl.jore.importer.jooq.network.tables.NetworkDirectionTypes;
import fi.hsl.jore.importer.jooq.network.tables.NetworkLineHeaders;
import fi.hsl.jore.importer.jooq.network.tables.NetworkLineHeadersStaging;
import fi.hsl.jore.importer.jooq.network.tables.NetworkLines;
import fi.hsl.jore.importer.jooq.network.tables.NetworkLinesStaging;
import fi.hsl.jore.importer.jooq.network.tables.NetworkRoutes;
import fi.hsl.jore.importer.jooq.network.tables.NetworkRoutesStaging;
import fi.hsl.jore.importer.jooq.network.tables.records.NetworkDirectionTypesRecord;
import fi.hsl.jore.importer.jooq.network.tables.records.NetworkLineHeadersRecord;
import fi.hsl.jore.importer.jooq.network.tables.records.NetworkLineHeadersStagingRecord;
import fi.hsl.jore.importer.jooq.network.tables.records.NetworkLinesRecord;
import fi.hsl.jore.importer.jooq.network.tables.records.NetworkLinesStagingRecord;
import fi.hsl.jore.importer.jooq.network.tables.records.NetworkRoutesRecord;
import fi.hsl.jore.importer.jooq.network.tables.records.NetworkRoutesStagingRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * network.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<NetworkDirectionTypesRecord> NETWORK_DIRECTION_TYPES_PKEY = Internal.createUniqueKey(NetworkDirectionTypes.NETWORK_DIRECTION_TYPES, DSL.name("network_direction_types_pkey"), new TableField[] { NetworkDirectionTypes.NETWORK_DIRECTION_TYPES.NETWORK_DIRECTION_TYPE }, true);
    public static final UniqueKey<NetworkLineHeadersRecord> NETWORK_LINE_HEADERS_PKEY = Internal.createUniqueKey(NetworkLineHeaders.NETWORK_LINE_HEADERS, DSL.name("network_line_headers_pkey"), new TableField[] { NetworkLineHeaders.NETWORK_LINE_HEADERS.NETWORK_LINE_HEADER_ID }, true);
    public static final UniqueKey<NetworkLineHeadersStagingRecord> NETWORK_LINE_HEADERS_STAGING_PKEY = Internal.createUniqueKey(NetworkLineHeadersStaging.NETWORK_LINE_HEADERS_STAGING, DSL.name("network_line_headers_staging_pkey"), new TableField[] { NetworkLineHeadersStaging.NETWORK_LINE_HEADERS_STAGING.NETWORK_LINE_HEADER_EXT_ID }, true);
    public static final UniqueKey<NetworkLinesRecord> NETWORK_LINES_PKEY = Internal.createUniqueKey(NetworkLines.NETWORK_LINES, DSL.name("network_lines_pkey"), new TableField[] { NetworkLines.NETWORK_LINES.NETWORK_LINE_ID }, true);
    public static final UniqueKey<NetworkLinesStagingRecord> NETWORK_LINES_STAGING_PKEY = Internal.createUniqueKey(NetworkLinesStaging.NETWORK_LINES_STAGING, DSL.name("network_lines_staging_pkey"), new TableField[] { NetworkLinesStaging.NETWORK_LINES_STAGING.NETWORK_LINE_EXT_ID }, true);
    public static final UniqueKey<NetworkRoutesRecord> NETWORK_ROUTES_PKEY = Internal.createUniqueKey(NetworkRoutes.NETWORK_ROUTES, DSL.name("network_routes_pkey"), new TableField[] { NetworkRoutes.NETWORK_ROUTES.NETWORK_ROUTE_ID }, true);
    public static final UniqueKey<NetworkRoutesStagingRecord> NETWORK_ROUTES_STAGING_PKEY = Internal.createUniqueKey(NetworkRoutesStaging.NETWORK_ROUTES_STAGING, DSL.name("network_routes_staging_pkey"), new TableField[] { NetworkRoutesStaging.NETWORK_ROUTES_STAGING.NETWORK_ROUTE_EXT_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<NetworkLineHeadersRecord, NetworkLinesRecord> NETWORK_LINE_HEADERS__NETWORK_LINE_HEADERS_NETWORK_LINE_ID_FKEY = Internal.createForeignKey(NetworkLineHeaders.NETWORK_LINE_HEADERS, DSL.name("network_line_headers_network_line_id_fkey"), new TableField[] { NetworkLineHeaders.NETWORK_LINE_HEADERS.NETWORK_LINE_ID }, Keys.NETWORK_LINES_PKEY, new TableField[] { NetworkLines.NETWORK_LINES.NETWORK_LINE_ID }, true);
    public static final ForeignKey<NetworkLinesRecord, InfrastructureNetworkTypesRecord> NETWORK_LINES__NETWORK_LINES_INFRASTRUCTURE_NETWORK_TYPE_FKEY = Internal.createForeignKey(NetworkLines.NETWORK_LINES, DSL.name("network_lines_infrastructure_network_type_fkey"), new TableField[] { NetworkLines.NETWORK_LINES.INFRASTRUCTURE_NETWORK_TYPE }, fi.hsl.jore.importer.jooq.infrastructure_network.Keys.INFRASTRUCTURE_NETWORK_TYPES_PKEY, new TableField[] { InfrastructureNetworkTypes.INFRASTRUCTURE_NETWORK_TYPES.INFRASTRUCTURE_NETWORK_TYPE }, true);
    public static final ForeignKey<NetworkLinesStagingRecord, InfrastructureNetworkTypesRecord> NETWORK_LINES_STAGING__NETWORK_LINES_STAGING_INFRASTRUCTURE_NETWORK_TYPE_FKEY = Internal.createForeignKey(NetworkLinesStaging.NETWORK_LINES_STAGING, DSL.name("network_lines_staging_infrastructure_network_type_fkey"), new TableField[] { NetworkLinesStaging.NETWORK_LINES_STAGING.INFRASTRUCTURE_NETWORK_TYPE }, fi.hsl.jore.importer.jooq.infrastructure_network.Keys.INFRASTRUCTURE_NETWORK_TYPES_PKEY, new TableField[] { InfrastructureNetworkTypes.INFRASTRUCTURE_NETWORK_TYPES.INFRASTRUCTURE_NETWORK_TYPE }, true);
    public static final ForeignKey<NetworkRoutesRecord, NetworkLinesRecord> NETWORK_ROUTES__NETWORK_ROUTES_NETWORK_LINE_ID_FKEY = Internal.createForeignKey(NetworkRoutes.NETWORK_ROUTES, DSL.name("network_routes_network_line_id_fkey"), new TableField[] { NetworkRoutes.NETWORK_ROUTES.NETWORK_LINE_ID }, Keys.NETWORK_LINES_PKEY, new TableField[] { NetworkLines.NETWORK_LINES.NETWORK_LINE_ID }, true);
}
