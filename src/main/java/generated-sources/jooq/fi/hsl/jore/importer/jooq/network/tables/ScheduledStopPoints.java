/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.importer.jooq.network.tables;


import fi.hsl.jore.importer.config.jooq.converter.time_range.TimeRange;
import fi.hsl.jore.importer.config.jooq.converter.time_range.TimeRangeBinding;
import fi.hsl.jore.importer.jooq.infrastructure_network.tables.InfrastructureNodes;
import fi.hsl.jore.importer.jooq.network.Keys;
import fi.hsl.jore.importer.jooq.network.Network;
import fi.hsl.jore.importer.jooq.network.tables.records.ScheduledStopPointsRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.JSONB;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScheduledStopPoints extends TableImpl<ScheduledStopPointsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>network.scheduled_stop_points</code>
     */
    public static final ScheduledStopPoints SCHEDULED_STOP_POINTS = new ScheduledStopPoints();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ScheduledStopPointsRecord> getRecordType() {
        return ScheduledStopPointsRecord.class;
    }

    /**
     * The column
     * <code>network.scheduled_stop_points.scheduled_stop_point_id</code>.
     */
    public final TableField<ScheduledStopPointsRecord, UUID> SCHEDULED_STOP_POINT_ID = createField(DSL.name("scheduled_stop_point_id"), SQLDataType.UUID.nullable(false).defaultValue(DSL.field("gen_random_uuid()", SQLDataType.UUID)), this, "");

    /**
     * The column
     * <code>network.scheduled_stop_points.scheduled_stop_point_ext_id</code>.
     */
    public final TableField<ScheduledStopPointsRecord, String> SCHEDULED_STOP_POINT_EXT_ID = createField(DSL.name("scheduled_stop_point_ext_id"), SQLDataType.VARCHAR(7).nullable(false), this, "");

    /**
     * The column
     * <code>network.scheduled_stop_points.infrastructure_node_id</code>.
     */
    public final TableField<ScheduledStopPointsRecord, UUID> INFRASTRUCTURE_NODE_ID = createField(DSL.name("infrastructure_node_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column
     * <code>network.scheduled_stop_points.scheduled_stop_point_ely_number</code>.
     */
    public final TableField<ScheduledStopPointsRecord, String> SCHEDULED_STOP_POINT_ELY_NUMBER = createField(DSL.name("scheduled_stop_point_ely_number"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column
     * <code>network.scheduled_stop_points.scheduled_stop_point_name</code>.
     */
    public final TableField<ScheduledStopPointsRecord, JSONB> SCHEDULED_STOP_POINT_NAME = createField(DSL.name("scheduled_stop_point_name"), SQLDataType.JSONB.nullable(false), this, "");

    /**
     * The column
     * <code>network.scheduled_stop_points.scheduled_stop_point_sys_period</code>.
     */
    public final TableField<ScheduledStopPointsRecord, TimeRange> SCHEDULED_STOP_POINT_SYS_PERIOD = createField(DSL.name("scheduled_stop_point_sys_period"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"tstzrange\"").nullable(false).defaultValue(DSL.field("tstzrange(CURRENT_TIMESTAMP, NULL::timestamp with time zone)", org.jooq.impl.SQLDataType.OTHER)), this, "", new TimeRangeBinding());

    /**
     * The column
     * <code>network.scheduled_stop_points.scheduled_stop_point_short_id</code>.
     */
    public final TableField<ScheduledStopPointsRecord, String> SCHEDULED_STOP_POINT_SHORT_ID = createField(DSL.name("scheduled_stop_point_short_id"), SQLDataType.VARCHAR(6), this, "");

    /**
     * The column
     * <code>network.scheduled_stop_points.scheduled_stop_point_transmodel_id</code>.
     */
    public final TableField<ScheduledStopPointsRecord, UUID> SCHEDULED_STOP_POINT_TRANSMODEL_ID = createField(DSL.name("scheduled_stop_point_transmodel_id"), SQLDataType.UUID, this, "");

    private ScheduledStopPoints(Name alias, Table<ScheduledStopPointsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ScheduledStopPoints(Name alias, Table<ScheduledStopPointsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>network.scheduled_stop_points</code> table
     * reference
     */
    public ScheduledStopPoints(String alias) {
        this(DSL.name(alias), SCHEDULED_STOP_POINTS);
    }

    /**
     * Create an aliased <code>network.scheduled_stop_points</code> table
     * reference
     */
    public ScheduledStopPoints(Name alias) {
        this(alias, SCHEDULED_STOP_POINTS);
    }

    /**
     * Create a <code>network.scheduled_stop_points</code> table reference
     */
    public ScheduledStopPoints() {
        this(DSL.name("scheduled_stop_points"), null);
    }

    public <O extends Record> ScheduledStopPoints(Table<O> child, ForeignKey<O, ScheduledStopPointsRecord> key) {
        super(child, key, SCHEDULED_STOP_POINTS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Network.NETWORK;
    }

    @Override
    public UniqueKey<ScheduledStopPointsRecord> getPrimaryKey() {
        return Keys.SCHEDULED_STOP_POINTS_PKEY;
    }

    @Override
    public List<ForeignKey<ScheduledStopPointsRecord, ?>> getReferences() {
        return Arrays.asList(Keys.SCHEDULED_STOP_POINTS__SCHEDULED_STOP_POINTS_INFRASTRUCTURE_NODE_ID_FKEY);
    }

    private transient InfrastructureNodes _infrastructureNodes;

    public InfrastructureNodes infrastructureNodes() {
        if (_infrastructureNodes == null)
            _infrastructureNodes = new InfrastructureNodes(this, Keys.SCHEDULED_STOP_POINTS__SCHEDULED_STOP_POINTS_INFRASTRUCTURE_NODE_ID_FKEY);

        return _infrastructureNodes;
    }

    @Override
    public ScheduledStopPoints as(String alias) {
        return new ScheduledStopPoints(DSL.name(alias), this);
    }

    @Override
    public ScheduledStopPoints as(Name alias) {
        return new ScheduledStopPoints(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ScheduledStopPoints rename(String name) {
        return new ScheduledStopPoints(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ScheduledStopPoints rename(Name name) {
        return new ScheduledStopPoints(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<UUID, String, UUID, String, JSONB, TimeRange, String, UUID> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
