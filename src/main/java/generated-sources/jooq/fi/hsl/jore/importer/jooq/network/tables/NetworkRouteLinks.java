/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.importer.jooq.network.tables;


import fi.hsl.jore.importer.config.jooq.converter.time_range.TimeRange;
import fi.hsl.jore.importer.config.jooq.converter.time_range.TimeRangeBinding;
import fi.hsl.jore.importer.jooq.infrastructure_network.tables.InfrastructureLinks;
import fi.hsl.jore.importer.jooq.network.Keys;
import fi.hsl.jore.importer.jooq.network.Network;
import fi.hsl.jore.importer.jooq.network.tables.records.NetworkRouteLinksRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NetworkRouteLinks extends TableImpl<NetworkRouteLinksRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>network.network_route_links</code>
     */
    public static final NetworkRouteLinks NETWORK_ROUTE_LINKS = new NetworkRouteLinks();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NetworkRouteLinksRecord> getRecordType() {
        return NetworkRouteLinksRecord.class;
    }

    /**
     * The column
     * <code>network.network_route_links.network_route_link_id</code>.
     */
    public final TableField<NetworkRouteLinksRecord, UUID> NETWORK_ROUTE_LINK_ID = createField(DSL.name("network_route_link_id"), SQLDataType.UUID.nullable(false).defaultValue(DSL.field("gen_random_uuid()", SQLDataType.UUID)), this, "");

    /**
     * The column
     * <code>network.network_route_links.network_route_direction_id</code>.
     */
    public final TableField<NetworkRouteLinksRecord, UUID> NETWORK_ROUTE_DIRECTION_ID = createField(DSL.name("network_route_direction_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column
     * <code>network.network_route_links.infrastructure_link_id</code>.
     */
    public final TableField<NetworkRouteLinksRecord, UUID> INFRASTRUCTURE_LINK_ID = createField(DSL.name("infrastructure_link_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column
     * <code>network.network_route_links.network_route_link_ext_id</code>.
     */
    public final TableField<NetworkRouteLinksRecord, String> NETWORK_ROUTE_LINK_EXT_ID = createField(DSL.name("network_route_link_ext_id"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column
     * <code>network.network_route_links.network_route_link_order</code>.
     */
    public final TableField<NetworkRouteLinksRecord, Integer> NETWORK_ROUTE_LINK_ORDER = createField(DSL.name("network_route_link_order"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column
     * <code>network.network_route_links.network_route_link_sys_period</code>.
     */
    public final TableField<NetworkRouteLinksRecord, TimeRange> NETWORK_ROUTE_LINK_SYS_PERIOD = createField(DSL.name("network_route_link_sys_period"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"tstzrange\"").nullable(false).defaultValue(DSL.field("tstzrange(CURRENT_TIMESTAMP, NULL::timestamp with time zone)", org.jooq.impl.SQLDataType.OTHER)), this, "", new TimeRangeBinding());

    private NetworkRouteLinks(Name alias, Table<NetworkRouteLinksRecord> aliased) {
        this(alias, aliased, null);
    }

    private NetworkRouteLinks(Name alias, Table<NetworkRouteLinksRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>network.network_route_links</code> table
     * reference
     */
    public NetworkRouteLinks(String alias) {
        this(DSL.name(alias), NETWORK_ROUTE_LINKS);
    }

    /**
     * Create an aliased <code>network.network_route_links</code> table
     * reference
     */
    public NetworkRouteLinks(Name alias) {
        this(alias, NETWORK_ROUTE_LINKS);
    }

    /**
     * Create a <code>network.network_route_links</code> table reference
     */
    public NetworkRouteLinks() {
        this(DSL.name("network_route_links"), null);
    }

    public <O extends Record> NetworkRouteLinks(Table<O> child, ForeignKey<O, NetworkRouteLinksRecord> key) {
        super(child, key, NETWORK_ROUTE_LINKS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Network.NETWORK;
    }

    @Override
    public UniqueKey<NetworkRouteLinksRecord> getPrimaryKey() {
        return Keys.NETWORK_ROUTE_LINKS_PKEY;
    }

    @Override
    public List<ForeignKey<NetworkRouteLinksRecord, ?>> getReferences() {
        return Arrays.asList(Keys.NETWORK_ROUTE_LINKS__NETWORK_ROUTE_LINKS_NETWORK_ROUTE_DIRECTION_ID_FKEY, Keys.NETWORK_ROUTE_LINKS__NETWORK_ROUTE_LINKS_INFRASTRUCTURE_LINK_ID_FKEY);
    }

    private transient NetworkRouteDirections _networkRouteDirections;
    private transient InfrastructureLinks _infrastructureLinks;

    public NetworkRouteDirections networkRouteDirections() {
        if (_networkRouteDirections == null)
            _networkRouteDirections = new NetworkRouteDirections(this, Keys.NETWORK_ROUTE_LINKS__NETWORK_ROUTE_LINKS_NETWORK_ROUTE_DIRECTION_ID_FKEY);

        return _networkRouteDirections;
    }

    public InfrastructureLinks infrastructureLinks() {
        if (_infrastructureLinks == null)
            _infrastructureLinks = new InfrastructureLinks(this, Keys.NETWORK_ROUTE_LINKS__NETWORK_ROUTE_LINKS_INFRASTRUCTURE_LINK_ID_FKEY);

        return _infrastructureLinks;
    }

    @Override
    public NetworkRouteLinks as(String alias) {
        return new NetworkRouteLinks(DSL.name(alias), this);
    }

    @Override
    public NetworkRouteLinks as(Name alias) {
        return new NetworkRouteLinks(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public NetworkRouteLinks rename(String name) {
        return new NetworkRouteLinks(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public NetworkRouteLinks rename(Name name) {
        return new NetworkRouteLinks(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<UUID, UUID, UUID, String, Integer, TimeRange> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
