/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.importer.jooq.network.tables;


import fi.hsl.jore.importer.config.jooq.converter.date_range.DateRange;
import fi.hsl.jore.importer.config.jooq.converter.date_range.DateRangeBinding;
import fi.hsl.jore.importer.config.jooq.converter.time_range.TimeRange;
import fi.hsl.jore.importer.config.jooq.converter.time_range.TimeRangeBinding;
import fi.hsl.jore.importer.jooq.network.Keys;
import fi.hsl.jore.importer.jooq.network.Network;
import fi.hsl.jore.importer.jooq.network.tables.records.NetworkRouteDirectionsRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.JSONB;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NetworkRouteDirections extends TableImpl<NetworkRouteDirectionsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>network.network_route_directions</code>
     */
    public static final NetworkRouteDirections NETWORK_ROUTE_DIRECTIONS = new NetworkRouteDirections();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NetworkRouteDirectionsRecord> getRecordType() {
        return NetworkRouteDirectionsRecord.class;
    }

    /**
     * The column
     * <code>network.network_route_directions.network_route_direction_id</code>.
     */
    public final TableField<NetworkRouteDirectionsRecord, UUID> NETWORK_ROUTE_DIRECTION_ID = createField(DSL.name("network_route_direction_id"), SQLDataType.UUID.nullable(false).defaultValue(DSL.field("gen_random_uuid()", SQLDataType.UUID)), this, "");

    /**
     * The column
     * <code>network.network_route_directions.network_route_id</code>.
     */
    public final TableField<NetworkRouteDirectionsRecord, UUID> NETWORK_ROUTE_ID = createField(DSL.name("network_route_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column
     * <code>network.network_route_directions.network_route_direction_type</code>.
     */
    public final TableField<NetworkRouteDirectionsRecord, String> NETWORK_ROUTE_DIRECTION_TYPE = createField(DSL.name("network_route_direction_type"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column
     * <code>network.network_route_directions.network_route_direction_ext_id</code>.
     */
    public final TableField<NetworkRouteDirectionsRecord, String> NETWORK_ROUTE_DIRECTION_EXT_ID = createField(DSL.name("network_route_direction_ext_id"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column
     * <code>network.network_route_directions.network_route_direction_length</code>.
     */
    public final TableField<NetworkRouteDirectionsRecord, Integer> NETWORK_ROUTE_DIRECTION_LENGTH = createField(DSL.name("network_route_direction_length"), SQLDataType.INTEGER, this, "");

    /**
     * The column
     * <code>network.network_route_directions.network_route_direction_name</code>.
     */
    public final TableField<NetworkRouteDirectionsRecord, JSONB> NETWORK_ROUTE_DIRECTION_NAME = createField(DSL.name("network_route_direction_name"), SQLDataType.JSONB.nullable(false), this, "");

    /**
     * The column
     * <code>network.network_route_directions.network_route_direction_name_short</code>.
     */
    public final TableField<NetworkRouteDirectionsRecord, JSONB> NETWORK_ROUTE_DIRECTION_NAME_SHORT = createField(DSL.name("network_route_direction_name_short"), SQLDataType.JSONB.nullable(false), this, "");

    /**
     * The column
     * <code>network.network_route_directions.network_route_direction_origin</code>.
     */
    public final TableField<NetworkRouteDirectionsRecord, JSONB> NETWORK_ROUTE_DIRECTION_ORIGIN = createField(DSL.name("network_route_direction_origin"), SQLDataType.JSONB.nullable(false), this, "");

    /**
     * The column
     * <code>network.network_route_directions.network_route_direction_destination</code>.
     */
    public final TableField<NetworkRouteDirectionsRecord, JSONB> NETWORK_ROUTE_DIRECTION_DESTINATION = createField(DSL.name("network_route_direction_destination"), SQLDataType.JSONB.nullable(false), this, "");

    /**
     * The column
     * <code>network.network_route_directions.network_route_direction_valid_date_range</code>.
     */
    public final TableField<NetworkRouteDirectionsRecord, DateRange> NETWORK_ROUTE_DIRECTION_VALID_DATE_RANGE = createField(DSL.name("network_route_direction_valid_date_range"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"daterange\"").nullable(false), this, "", new DateRangeBinding());

    /**
     * The column
     * <code>network.network_route_directions.network_route_direction_sys_period</code>.
     */
    public final TableField<NetworkRouteDirectionsRecord, TimeRange> NETWORK_ROUTE_DIRECTION_SYS_PERIOD = createField(DSL.name("network_route_direction_sys_period"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"tstzrange\"").nullable(false).defaultValue(DSL.field("tstzrange(CURRENT_TIMESTAMP, NULL::timestamp with time zone)", org.jooq.impl.SQLDataType.OTHER)), this, "", new TimeRangeBinding());

    /**
     * The column
     * <code>network.network_route_directions.network_route_jore4_id</code>.
     */
    public final TableField<NetworkRouteDirectionsRecord, UUID> NETWORK_ROUTE_JORE4_ID = createField(DSL.name("network_route_jore4_id"), SQLDataType.UUID, this, "");

    /**
     * The column
     * <code>network.network_route_directions.journey_pattern_jore4_id</code>.
     */
    public final TableField<NetworkRouteDirectionsRecord, UUID> JOURNEY_PATTERN_JORE4_ID = createField(DSL.name("journey_pattern_jore4_id"), SQLDataType.UUID, this, "");

    private NetworkRouteDirections(Name alias, Table<NetworkRouteDirectionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private NetworkRouteDirections(Name alias, Table<NetworkRouteDirectionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>network.network_route_directions</code> table
     * reference
     */
    public NetworkRouteDirections(String alias) {
        this(DSL.name(alias), NETWORK_ROUTE_DIRECTIONS);
    }

    /**
     * Create an aliased <code>network.network_route_directions</code> table
     * reference
     */
    public NetworkRouteDirections(Name alias) {
        this(alias, NETWORK_ROUTE_DIRECTIONS);
    }

    /**
     * Create a <code>network.network_route_directions</code> table reference
     */
    public NetworkRouteDirections() {
        this(DSL.name("network_route_directions"), null);
    }

    public <O extends Record> NetworkRouteDirections(Table<O> child, ForeignKey<O, NetworkRouteDirectionsRecord> key) {
        super(child, key, NETWORK_ROUTE_DIRECTIONS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Network.NETWORK;
    }

    @Override
    public UniqueKey<NetworkRouteDirectionsRecord> getPrimaryKey() {
        return Keys.NETWORK_ROUTE_DIRECTIONS_PKEY;
    }

    @Override
    public List<ForeignKey<NetworkRouteDirectionsRecord, ?>> getReferences() {
        return Arrays.asList(Keys.NETWORK_ROUTE_DIRECTIONS__NETWORK_ROUTE_DIRECTIONS_NETWORK_ROUTE_ID_FKEY, Keys.NETWORK_ROUTE_DIRECTIONS__NETWORK_ROUTE_DIRECTIONS_NETWORK_ROUTE_DIRECTION_TYPE_FKEY);
    }

    private transient NetworkRoutes _networkRoutes;
    private transient NetworkDirectionTypes _networkDirectionTypes;

    public NetworkRoutes networkRoutes() {
        if (_networkRoutes == null)
            _networkRoutes = new NetworkRoutes(this, Keys.NETWORK_ROUTE_DIRECTIONS__NETWORK_ROUTE_DIRECTIONS_NETWORK_ROUTE_ID_FKEY);

        return _networkRoutes;
    }

    public NetworkDirectionTypes networkDirectionTypes() {
        if (_networkDirectionTypes == null)
            _networkDirectionTypes = new NetworkDirectionTypes(this, Keys.NETWORK_ROUTE_DIRECTIONS__NETWORK_ROUTE_DIRECTIONS_NETWORK_ROUTE_DIRECTION_TYPE_FKEY);

        return _networkDirectionTypes;
    }

    @Override
    public NetworkRouteDirections as(String alias) {
        return new NetworkRouteDirections(DSL.name(alias), this);
    }

    @Override
    public NetworkRouteDirections as(Name alias) {
        return new NetworkRouteDirections(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public NetworkRouteDirections rename(String name) {
        return new NetworkRouteDirections(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public NetworkRouteDirections rename(Name name) {
        return new NetworkRouteDirections(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<UUID, UUID, String, String, Integer, JSONB, JSONB, JSONB, JSONB, DateRange, TimeRange, UUID, UUID> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
