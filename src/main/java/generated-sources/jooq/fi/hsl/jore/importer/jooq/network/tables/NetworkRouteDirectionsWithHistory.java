/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.importer.jooq.network.tables;


import fi.hsl.jore.importer.config.jooq.converter.date_range.DateRange;
import fi.hsl.jore.importer.config.jooq.converter.date_range.DateRangeBinding;
import fi.hsl.jore.importer.config.jooq.converter.time_range.TimeRange;
import fi.hsl.jore.importer.config.jooq.converter.time_range.TimeRangeBinding;
import fi.hsl.jore.importer.jooq.network.Network;
import fi.hsl.jore.importer.jooq.network.tables.records.NetworkRouteDirectionsWithHistoryRecord;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.JSONB;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NetworkRouteDirectionsWithHistory extends TableImpl<NetworkRouteDirectionsWithHistoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>network.network_route_directions_with_history</code>
     */
    public static final NetworkRouteDirectionsWithHistory NETWORK_ROUTE_DIRECTIONS_WITH_HISTORY = new NetworkRouteDirectionsWithHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NetworkRouteDirectionsWithHistoryRecord> getRecordType() {
        return NetworkRouteDirectionsWithHistoryRecord.class;
    }

    /**
     * The column <code>network.network_route_directions_with_history.network_route_direction_id</code>.
     */
    public final TableField<NetworkRouteDirectionsWithHistoryRecord, UUID> NETWORK_ROUTE_DIRECTION_ID = createField(DSL.name("network_route_direction_id"), SQLDataType.UUID, this, "");

    /**
     * The column <code>network.network_route_directions_with_history.network_route_id</code>.
     */
    public final TableField<NetworkRouteDirectionsWithHistoryRecord, UUID> NETWORK_ROUTE_ID = createField(DSL.name("network_route_id"), SQLDataType.UUID, this, "");

    /**
     * The column <code>network.network_route_directions_with_history.network_route_direction_type</code>.
     */
    public final TableField<NetworkRouteDirectionsWithHistoryRecord, String> NETWORK_ROUTE_DIRECTION_TYPE = createField(DSL.name("network_route_direction_type"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>network.network_route_directions_with_history.network_route_direction_ext_id</code>.
     */
    public final TableField<NetworkRouteDirectionsWithHistoryRecord, String> NETWORK_ROUTE_DIRECTION_EXT_ID = createField(DSL.name("network_route_direction_ext_id"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>network.network_route_directions_with_history.network_route_direction_length</code>.
     */
    public final TableField<NetworkRouteDirectionsWithHistoryRecord, Integer> NETWORK_ROUTE_DIRECTION_LENGTH = createField(DSL.name("network_route_direction_length"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>network.network_route_directions_with_history.network_route_direction_name</code>.
     */
    public final TableField<NetworkRouteDirectionsWithHistoryRecord, JSONB> NETWORK_ROUTE_DIRECTION_NAME = createField(DSL.name("network_route_direction_name"), SQLDataType.JSONB, this, "");

    /**
     * The column <code>network.network_route_directions_with_history.network_route_direction_name_short</code>.
     */
    public final TableField<NetworkRouteDirectionsWithHistoryRecord, JSONB> NETWORK_ROUTE_DIRECTION_NAME_SHORT = createField(DSL.name("network_route_direction_name_short"), SQLDataType.JSONB, this, "");

    /**
     * The column <code>network.network_route_directions_with_history.network_route_direction_origin</code>.
     */
    public final TableField<NetworkRouteDirectionsWithHistoryRecord, JSONB> NETWORK_ROUTE_DIRECTION_ORIGIN = createField(DSL.name("network_route_direction_origin"), SQLDataType.JSONB, this, "");

    /**
     * The column <code>network.network_route_directions_with_history.network_route_direction_destination</code>.
     */
    public final TableField<NetworkRouteDirectionsWithHistoryRecord, JSONB> NETWORK_ROUTE_DIRECTION_DESTINATION = createField(DSL.name("network_route_direction_destination"), SQLDataType.JSONB, this, "");

    /**
     * The column <code>network.network_route_directions_with_history.network_route_direction_valid_date_range</code>.
     */
    public final TableField<NetworkRouteDirectionsWithHistoryRecord, DateRange> NETWORK_ROUTE_DIRECTION_VALID_DATE_RANGE = createField(DSL.name("network_route_direction_valid_date_range"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"daterange\""), this, "", new DateRangeBinding());

    /**
     * The column <code>network.network_route_directions_with_history.network_route_direction_sys_period</code>.
     */
    public final TableField<NetworkRouteDirectionsWithHistoryRecord, TimeRange> NETWORK_ROUTE_DIRECTION_SYS_PERIOD = createField(DSL.name("network_route_direction_sys_period"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"tstzrange\""), this, "", new TimeRangeBinding());

    /**
     * The column <code>network.network_route_directions_with_history.network_route_transmodel_id</code>.
     */
    public final TableField<NetworkRouteDirectionsWithHistoryRecord, UUID> NETWORK_ROUTE_TRANSMODEL_ID = createField(DSL.name("network_route_transmodel_id"), SQLDataType.UUID, this, "");

    /**
     * The column <code>network.network_route_directions_with_history.journey_pattern_transmodel_id</code>.
     */
    public final TableField<NetworkRouteDirectionsWithHistoryRecord, UUID> JOURNEY_PATTERN_TRANSMODEL_ID = createField(DSL.name("journey_pattern_transmodel_id"), SQLDataType.UUID, this, "");

    private NetworkRouteDirectionsWithHistory(Name alias, Table<NetworkRouteDirectionsWithHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private NetworkRouteDirectionsWithHistory(Name alias, Table<NetworkRouteDirectionsWithHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view("create view \"network_route_directions_with_history\" as  SELECT network_route_directions.network_route_direction_id,\n    network_route_directions.network_route_id,\n    network_route_directions.network_route_direction_type,\n    network_route_directions.network_route_direction_ext_id,\n    network_route_directions.network_route_direction_length,\n    network_route_directions.network_route_direction_name,\n    network_route_directions.network_route_direction_name_short,\n    network_route_directions.network_route_direction_origin,\n    network_route_directions.network_route_direction_destination,\n    network_route_directions.network_route_direction_valid_date_range,\n    network_route_directions.network_route_direction_sys_period,\n    network_route_directions.network_route_transmodel_id,\n    network_route_directions.journey_pattern_transmodel_id\n   FROM network.network_route_directions\nUNION ALL\n SELECT network_route_directions_history.network_route_direction_id,\n    network_route_directions_history.network_route_id,\n    network_route_directions_history.network_route_direction_type,\n    network_route_directions_history.network_route_direction_ext_id,\n    network_route_directions_history.network_route_direction_length,\n    network_route_directions_history.network_route_direction_name,\n    network_route_directions_history.network_route_direction_name_short,\n    network_route_directions_history.network_route_direction_origin,\n    network_route_directions_history.network_route_direction_destination,\n    network_route_directions_history.network_route_direction_valid_date_range,\n    network_route_directions_history.network_route_direction_sys_period,\n    network_route_directions_history.network_route_transmodel_id,\n    network_route_directions_history.journey_pattern_transmodel_id\n   FROM network.network_route_directions_history;"));
    }

    /**
     * Create an aliased <code>network.network_route_directions_with_history</code> table reference
     */
    public NetworkRouteDirectionsWithHistory(String alias) {
        this(DSL.name(alias), NETWORK_ROUTE_DIRECTIONS_WITH_HISTORY);
    }

    /**
     * Create an aliased <code>network.network_route_directions_with_history</code> table reference
     */
    public NetworkRouteDirectionsWithHistory(Name alias) {
        this(alias, NETWORK_ROUTE_DIRECTIONS_WITH_HISTORY);
    }

    /**
     * Create a <code>network.network_route_directions_with_history</code> table reference
     */
    public NetworkRouteDirectionsWithHistory() {
        this(DSL.name("network_route_directions_with_history"), null);
    }

    public <O extends Record> NetworkRouteDirectionsWithHistory(Table<O> child, ForeignKey<O, NetworkRouteDirectionsWithHistoryRecord> key) {
        super(child, key, NETWORK_ROUTE_DIRECTIONS_WITH_HISTORY);
    }

    @Override
    public Schema getSchema() {
        return Network.NETWORK;
    }

    @Override
    public NetworkRouteDirectionsWithHistory as(String alias) {
        return new NetworkRouteDirectionsWithHistory(DSL.name(alias), this);
    }

    @Override
    public NetworkRouteDirectionsWithHistory as(Name alias) {
        return new NetworkRouteDirectionsWithHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public NetworkRouteDirectionsWithHistory rename(String name) {
        return new NetworkRouteDirectionsWithHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public NetworkRouteDirectionsWithHistory rename(Name name) {
        return new NetworkRouteDirectionsWithHistory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<UUID, UUID, String, String, Integer, JSONB, JSONB, JSONB, JSONB, DateRange, TimeRange, UUID, UUID> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
