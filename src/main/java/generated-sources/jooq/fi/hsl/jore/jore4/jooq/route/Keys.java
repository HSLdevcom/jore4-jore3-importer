/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.route;


import fi.hsl.jore.jore4.jooq.infrastructure_network.tables.InfrastructureLink;
import fi.hsl.jore.jore4.jooq.infrastructure_network.tables.records.InfrastructureLinkRecord;
import fi.hsl.jore.jore4.jooq.internal_route.tables.Route;
import fi.hsl.jore.jore4.jooq.internal_route.tables.records.RouteRecord;
import fi.hsl.jore.jore4.jooq.reusable_components.tables.VehicleMode;
import fi.hsl.jore.jore4.jooq.reusable_components.tables.records.VehicleModeRecord;
import fi.hsl.jore.jore4.jooq.route.tables.Direction;
import fi.hsl.jore.jore4.jooq.route.tables.InfrastructureLinkAlongRoute;
import fi.hsl.jore.jore4.jooq.route.tables.Line;
import fi.hsl.jore.jore4.jooq.route.tables.records.DirectionRecord;
import fi.hsl.jore.jore4.jooq.route.tables.records.InfrastructureLinkAlongRouteRecord;
import fi.hsl.jore.jore4.jooq.route.tables.records.LineRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * route.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DirectionRecord> DIRECTION_PKEY = Internal.createUniqueKey(Direction.DIRECTION, DSL.name("direction_pkey"), new TableField[] { Direction.DIRECTION.DIRECTION_ }, true);
    public static final UniqueKey<InfrastructureLinkAlongRouteRecord> INFRASTRUCTURE_LINK_ALONG_ROUTE_PKEY = Internal.createUniqueKey(InfrastructureLinkAlongRoute.INFRASTRUCTURE_LINK_ALONG_ROUTE, DSL.name("infrastructure_link_along_route_pkey"), new TableField[] { InfrastructureLinkAlongRoute.INFRASTRUCTURE_LINK_ALONG_ROUTE.ROUTE_ID, InfrastructureLinkAlongRoute.INFRASTRUCTURE_LINK_ALONG_ROUTE.INFRASTRUCTURE_LINK_SEQUENCE }, true);
    public static final UniqueKey<LineRecord> LINE_PKEY = Internal.createUniqueKey(Line.LINE, DSL.name("line_pkey"), new TableField[] { Line.LINE.LINE_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<DirectionRecord, DirectionRecord> DIRECTION__DIRECTION_THE_OPPOSITE_OF_DIRECTION_FKEY = Internal.createForeignKey(Direction.DIRECTION, DSL.name("direction_the_opposite_of_direction_fkey"), new TableField[] { Direction.DIRECTION.THE_OPPOSITE_OF_DIRECTION }, Keys.DIRECTION_PKEY, new TableField[] { Direction.DIRECTION.DIRECTION_ }, true);
    public static final ForeignKey<InfrastructureLinkAlongRouteRecord, InfrastructureLinkRecord> INFRASTRUCTURE_LINK_ALONG_ROUTE__INFRASTRUCTURE_LINK_ALONG_ROUTE_INFRASTRUCTURE_LINK_ID_FKEY = Internal.createForeignKey(InfrastructureLinkAlongRoute.INFRASTRUCTURE_LINK_ALONG_ROUTE, DSL.name("infrastructure_link_along_route_infrastructure_link_id_fkey"), new TableField[] { InfrastructureLinkAlongRoute.INFRASTRUCTURE_LINK_ALONG_ROUTE.INFRASTRUCTURE_LINK_ID }, fi.hsl.jore.jore4.jooq.infrastructure_network.Keys.INFRASTRUCTURE_LINK_PKEY, new TableField[] { InfrastructureLink.INFRASTRUCTURE_LINK.INFRASTRUCTURE_LINK_ID }, true);
    public static final ForeignKey<InfrastructureLinkAlongRouteRecord, RouteRecord> INFRASTRUCTURE_LINK_ALONG_ROUTE__INFRASTRUCTURE_LINK_ALONG_ROUTE_ROUTE_ID_FKEY = Internal.createForeignKey(InfrastructureLinkAlongRoute.INFRASTRUCTURE_LINK_ALONG_ROUTE, DSL.name("infrastructure_link_along_route_route_id_fkey"), new TableField[] { InfrastructureLinkAlongRoute.INFRASTRUCTURE_LINK_ALONG_ROUTE.ROUTE_ID }, fi.hsl.jore.jore4.jooq.internal_route.Keys.ROUTE_PKEY, new TableField[] { Route.ROUTE.ROUTE_ID }, true);
    public static final ForeignKey<LineRecord, VehicleModeRecord> LINE__LINE_PRIMARY_VEHICLE_MODE_FKEY = Internal.createForeignKey(Line.LINE, DSL.name("line_primary_vehicle_mode_fkey"), new TableField[] { Line.LINE.PRIMARY_VEHICLE_MODE }, fi.hsl.jore.jore4.jooq.reusable_components.Keys.VEHICLE_MODE_PKEY, new TableField[] { VehicleMode.VEHICLE_MODE.VEHICLE_MODE_ }, true);
}
