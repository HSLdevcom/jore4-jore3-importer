/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.service_pattern.tables.records;


import fi.hsl.jore.jore4.jooq.service_pattern.tables.ScheduledStopPointServicedByVehicleMode;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Which scheduled stop points are serviced by which vehicle modes?
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScheduledStopPointServicedByVehicleModeRecord extends UpdatableRecordImpl<ScheduledStopPointServicedByVehicleModeRecord> implements Record2<UUID, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>service_pattern.scheduled_stop_point_serviced_by_vehicle_mode.scheduled_stop_point_id</code>. The scheduled stop point that is serviced by the vehicle mode.
     */
    public void setScheduledStopPointId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>service_pattern.scheduled_stop_point_serviced_by_vehicle_mode.scheduled_stop_point_id</code>. The scheduled stop point that is serviced by the vehicle mode.
     */
    public UUID getScheduledStopPointId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>service_pattern.scheduled_stop_point_serviced_by_vehicle_mode.vehicle_mode</code>. The vehicle mode servicing the scheduled stop point.
     */
    public void setVehicleMode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>service_pattern.scheduled_stop_point_serviced_by_vehicle_mode.vehicle_mode</code>. The vehicle mode servicing the scheduled stop point.
     */
    public String getVehicleMode() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UUID, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return ScheduledStopPointServicedByVehicleMode.SCHEDULED_STOP_POINT_SERVICED_BY_VEHICLE_MODE.SCHEDULED_STOP_POINT_ID;
    }

    @Override
    public Field<String> field2() {
        return ScheduledStopPointServicedByVehicleMode.SCHEDULED_STOP_POINT_SERVICED_BY_VEHICLE_MODE.VEHICLE_MODE;
    }

    @Override
    public UUID component1() {
        return getScheduledStopPointId();
    }

    @Override
    public String component2() {
        return getVehicleMode();
    }

    @Override
    public UUID value1() {
        return getScheduledStopPointId();
    }

    @Override
    public String value2() {
        return getVehicleMode();
    }

    @Override
    public ScheduledStopPointServicedByVehicleModeRecord value1(UUID value) {
        setScheduledStopPointId(value);
        return this;
    }

    @Override
    public ScheduledStopPointServicedByVehicleModeRecord value2(String value) {
        setVehicleMode(value);
        return this;
    }

    @Override
    public ScheduledStopPointServicedByVehicleModeRecord values(UUID value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ScheduledStopPointServicedByVehicleModeRecord
     */
    public ScheduledStopPointServicedByVehicleModeRecord() {
        super(ScheduledStopPointServicedByVehicleMode.SCHEDULED_STOP_POINT_SERVICED_BY_VEHICLE_MODE);
    }

    /**
     * Create a detached, initialised ScheduledStopPointServicedByVehicleModeRecord
     */
    public ScheduledStopPointServicedByVehicleModeRecord(UUID scheduledStopPointId, String vehicleMode) {
        super(ScheduledStopPointServicedByVehicleMode.SCHEDULED_STOP_POINT_SERVICED_BY_VEHICLE_MODE);

        setScheduledStopPointId(scheduledStopPointId);
        setVehicleMode(vehicleMode);
    }
}
