/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.jore4.jooq.infrastructure_network.tables;


import fi.hsl.jore.jore4.jooq.infrastructure_network.InfrastructureNetwork;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * Which infrastructure links are safely traversed by which vehicle submodes?
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VehicleSubmodeOnInfrastructureLink extends TableImpl<Record> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>infrastructure_network.vehicle_submode_on_infrastructure_link</code>
     */
    public static final VehicleSubmodeOnInfrastructureLink VEHICLE_SUBMODE_ON_INFRASTRUCTURE_LINK = new VehicleSubmodeOnInfrastructureLink();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column
     * <code>infrastructure_network.vehicle_submode_on_infrastructure_link.infrastructure_link_id</code>.
     * The infrastructure link that can be safely traversed by the vehicle
     * submode.
     */
    public final TableField<Record, UUID> INFRASTRUCTURE_LINK_ID = createField(DSL.name("infrastructure_link_id"), SQLDataType.UUID.nullable(false), this, "The infrastructure link that can be safely traversed by the vehicle submode.");

    /**
     * The column
     * <code>infrastructure_network.vehicle_submode_on_infrastructure_link.vehicle_submode</code>.
     * The vehicle submode that can safely traverse the infrastructure link.
     */
    public final TableField<Record, String> VEHICLE_SUBMODE = createField(DSL.name("vehicle_submode"), SQLDataType.CLOB.nullable(false), this, "The vehicle submode that can safely traverse the infrastructure link.");

    private VehicleSubmodeOnInfrastructureLink(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private VehicleSubmodeOnInfrastructureLink(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Which infrastructure links are safely traversed by which vehicle submodes?"), TableOptions.table());
    }

    /**
     * Create an aliased
     * <code>infrastructure_network.vehicle_submode_on_infrastructure_link</code>
     * table reference
     */
    public VehicleSubmodeOnInfrastructureLink(String alias) {
        this(DSL.name(alias), VEHICLE_SUBMODE_ON_INFRASTRUCTURE_LINK);
    }

    /**
     * Create an aliased
     * <code>infrastructure_network.vehicle_submode_on_infrastructure_link</code>
     * table reference
     */
    public VehicleSubmodeOnInfrastructureLink(Name alias) {
        this(alias, VEHICLE_SUBMODE_ON_INFRASTRUCTURE_LINK);
    }

    /**
     * Create a
     * <code>infrastructure_network.vehicle_submode_on_infrastructure_link</code>
     * table reference
     */
    public VehicleSubmodeOnInfrastructureLink() {
        this(DSL.name("vehicle_submode_on_infrastructure_link"), null);
    }

    public <O extends Record> VehicleSubmodeOnInfrastructureLink(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, VEHICLE_SUBMODE_ON_INFRASTRUCTURE_LINK);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : InfrastructureNetwork.INFRASTRUCTURE_NETWORK;
    }

    @Override
    public VehicleSubmodeOnInfrastructureLink as(String alias) {
        return new VehicleSubmodeOnInfrastructureLink(DSL.name(alias), this);
    }

    @Override
    public VehicleSubmodeOnInfrastructureLink as(Name alias) {
        return new VehicleSubmodeOnInfrastructureLink(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VehicleSubmodeOnInfrastructureLink rename(String name) {
        return new VehicleSubmodeOnInfrastructureLink(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VehicleSubmodeOnInfrastructureLink rename(Name name) {
        return new VehicleSubmodeOnInfrastructureLink(name, null);
    }
}
