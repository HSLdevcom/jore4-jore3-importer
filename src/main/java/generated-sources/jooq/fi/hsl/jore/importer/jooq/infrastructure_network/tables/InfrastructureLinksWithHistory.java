/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.importer.jooq.infrastructure_network.tables;


import fi.hsl.jore.importer.config.jooq.converter.geometry.LineStringBinding;
import fi.hsl.jore.importer.config.jooq.converter.time_range.TimeRange;
import fi.hsl.jore.importer.config.jooq.converter.time_range.TimeRangeBinding;
import fi.hsl.jore.importer.jooq.infrastructure_network.InfrastructureNetwork;
import fi.hsl.jore.importer.jooq.infrastructure_network.tables.records.InfrastructureLinksWithHistoryRecord;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.locationtech.jts.geom.LineString;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InfrastructureLinksWithHistory extends TableImpl<InfrastructureLinksWithHistoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>infrastructure_network.infrastructure_links_with_history</code>
     */
    public static final InfrastructureLinksWithHistory INFRASTRUCTURE_LINKS_WITH_HISTORY = new InfrastructureLinksWithHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InfrastructureLinksWithHistoryRecord> getRecordType() {
        return InfrastructureLinksWithHistoryRecord.class;
    }

    /**
     * The column
     * <code>infrastructure_network.infrastructure_links_with_history.infrastructure_link_id</code>.
     */
    public final TableField<InfrastructureLinksWithHistoryRecord, UUID> INFRASTRUCTURE_LINK_ID = createField(DSL.name("infrastructure_link_id"), SQLDataType.UUID, this, "");

    /**
     * The column
     * <code>infrastructure_network.infrastructure_links_with_history.infrastructure_link_ext_id</code>.
     */
    public final TableField<InfrastructureLinksWithHistoryRecord, String> INFRASTRUCTURE_LINK_EXT_ID = createField(DSL.name("infrastructure_link_ext_id"), SQLDataType.CLOB, this, "");

    /**
     * The column
     * <code>infrastructure_network.infrastructure_links_with_history.infrastructure_link_geog</code>.
     */
    public final TableField<InfrastructureLinksWithHistoryRecord, LineString> INFRASTRUCTURE_LINK_GEOG = createField(DSL.name("infrastructure_link_geog"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"geography\""), this, "", new LineStringBinding());

    /**
     * The column
     * <code>infrastructure_network.infrastructure_links_with_history.infrastructure_network_type</code>.
     */
    public final TableField<InfrastructureLinksWithHistoryRecord, String> INFRASTRUCTURE_NETWORK_TYPE = createField(DSL.name("infrastructure_network_type"), SQLDataType.CLOB, this, "");

    /**
     * The column
     * <code>infrastructure_network.infrastructure_links_with_history.infrastructure_link_sys_period</code>.
     */
    public final TableField<InfrastructureLinksWithHistoryRecord, TimeRange> INFRASTRUCTURE_LINK_SYS_PERIOD = createField(DSL.name("infrastructure_link_sys_period"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"tstzrange\""), this, "", new TimeRangeBinding());

    /**
     * The column
     * <code>infrastructure_network.infrastructure_links_with_history.infrastructure_link_start_node</code>.
     */
    public final TableField<InfrastructureLinksWithHistoryRecord, UUID> INFRASTRUCTURE_LINK_START_NODE = createField(DSL.name("infrastructure_link_start_node"), SQLDataType.UUID, this, "");

    /**
     * The column
     * <code>infrastructure_network.infrastructure_links_with_history.infrastructure_link_end_node</code>.
     */
    public final TableField<InfrastructureLinksWithHistoryRecord, UUID> INFRASTRUCTURE_LINK_END_NODE = createField(DSL.name("infrastructure_link_end_node"), SQLDataType.UUID, this, "");

    private InfrastructureLinksWithHistory(Name alias, Table<InfrastructureLinksWithHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private InfrastructureLinksWithHistory(Name alias, Table<InfrastructureLinksWithHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view("create view \"infrastructure_links_with_history\" as  SELECT infrastructure_links.infrastructure_link_id,\n    infrastructure_links.infrastructure_link_ext_id,\n    infrastructure_links.infrastructure_link_geog,\n    infrastructure_links.infrastructure_network_type,\n    infrastructure_links.infrastructure_link_sys_period,\n    infrastructure_links.infrastructure_link_start_node,\n    infrastructure_links.infrastructure_link_end_node\n   FROM infrastructure_network.infrastructure_links\nUNION ALL\n SELECT infrastructure_links_history.infrastructure_link_id,\n    infrastructure_links_history.infrastructure_link_ext_id,\n    infrastructure_links_history.infrastructure_link_geog,\n    infrastructure_links_history.infrastructure_network_type,\n    infrastructure_links_history.infrastructure_link_sys_period,\n    infrastructure_links_history.infrastructure_link_start_node,\n    infrastructure_links_history.infrastructure_link_end_node\n   FROM infrastructure_network.infrastructure_links_history;"));
    }

    /**
     * Create an aliased
     * <code>infrastructure_network.infrastructure_links_with_history</code>
     * table reference
     */
    public InfrastructureLinksWithHistory(String alias) {
        this(DSL.name(alias), INFRASTRUCTURE_LINKS_WITH_HISTORY);
    }

    /**
     * Create an aliased
     * <code>infrastructure_network.infrastructure_links_with_history</code>
     * table reference
     */
    public InfrastructureLinksWithHistory(Name alias) {
        this(alias, INFRASTRUCTURE_LINKS_WITH_HISTORY);
    }

    /**
     * Create a
     * <code>infrastructure_network.infrastructure_links_with_history</code>
     * table reference
     */
    public InfrastructureLinksWithHistory() {
        this(DSL.name("infrastructure_links_with_history"), null);
    }

    public <O extends Record> InfrastructureLinksWithHistory(Table<O> child, ForeignKey<O, InfrastructureLinksWithHistoryRecord> key) {
        super(child, key, INFRASTRUCTURE_LINKS_WITH_HISTORY);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : InfrastructureNetwork.INFRASTRUCTURE_NETWORK;
    }

    @Override
    public InfrastructureLinksWithHistory as(String alias) {
        return new InfrastructureLinksWithHistory(DSL.name(alias), this);
    }

    @Override
    public InfrastructureLinksWithHistory as(Name alias) {
        return new InfrastructureLinksWithHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InfrastructureLinksWithHistory rename(String name) {
        return new InfrastructureLinksWithHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InfrastructureLinksWithHistory rename(Name name) {
        return new InfrastructureLinksWithHistory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, String, LineString, String, TimeRange, UUID, UUID> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
