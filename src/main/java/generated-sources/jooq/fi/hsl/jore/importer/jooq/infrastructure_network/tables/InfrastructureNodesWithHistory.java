/*
 * This file is generated by jOOQ.
 */
package fi.hsl.jore.importer.jooq.infrastructure_network.tables;


import fi.hsl.jore.importer.config.jooq.converter.geometry.PointBinding;
import fi.hsl.jore.importer.config.jooq.converter.time_range.TimeRange;
import fi.hsl.jore.importer.config.jooq.converter.time_range.TimeRangeBinding;
import fi.hsl.jore.importer.jooq.infrastructure_network.InfrastructureNetwork;
import fi.hsl.jore.importer.jooq.infrastructure_network.tables.records.InfrastructureNodesWithHistoryRecord;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.locationtech.jts.geom.Point;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InfrastructureNodesWithHistory extends TableImpl<InfrastructureNodesWithHistoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>infrastructure_network.infrastructure_nodes_with_history</code>
     */
    public static final InfrastructureNodesWithHistory INFRASTRUCTURE_NODES_WITH_HISTORY = new InfrastructureNodesWithHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InfrastructureNodesWithHistoryRecord> getRecordType() {
        return InfrastructureNodesWithHistoryRecord.class;
    }

    /**
     * The column
     * <code>infrastructure_network.infrastructure_nodes_with_history.infrastructure_node_id</code>.
     */
    public final TableField<InfrastructureNodesWithHistoryRecord, UUID> INFRASTRUCTURE_NODE_ID = createField(DSL.name("infrastructure_node_id"), SQLDataType.UUID, this, "");

    /**
     * The column
     * <code>infrastructure_network.infrastructure_nodes_with_history.infrastructure_node_ext_id</code>.
     */
    public final TableField<InfrastructureNodesWithHistoryRecord, String> INFRASTRUCTURE_NODE_EXT_ID = createField(DSL.name("infrastructure_node_ext_id"), SQLDataType.CLOB, this, "");

    /**
     * The column
     * <code>infrastructure_network.infrastructure_nodes_with_history.infrastructure_node_type</code>.
     */
    public final TableField<InfrastructureNodesWithHistoryRecord, String> INFRASTRUCTURE_NODE_TYPE = createField(DSL.name("infrastructure_node_type"), SQLDataType.CLOB, this, "");

    /**
     * The column
     * <code>infrastructure_network.infrastructure_nodes_with_history.infrastructure_node_location</code>.
     */
    public final TableField<InfrastructureNodesWithHistoryRecord, Point> INFRASTRUCTURE_NODE_LOCATION = createField(DSL.name("infrastructure_node_location"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"geometry\""), this, "", new PointBinding());

    /**
     * The column
     * <code>infrastructure_network.infrastructure_nodes_with_history.infrastructure_node_projected_location</code>.
     */
    public final TableField<InfrastructureNodesWithHistoryRecord, Point> INFRASTRUCTURE_NODE_PROJECTED_LOCATION = createField(DSL.name("infrastructure_node_projected_location"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"geometry\""), this, "", new PointBinding());

    /**
     * The column
     * <code>infrastructure_network.infrastructure_nodes_with_history.infrastructure_node_sys_period</code>.
     */
    public final TableField<InfrastructureNodesWithHistoryRecord, TimeRange> INFRASTRUCTURE_NODE_SYS_PERIOD = createField(DSL.name("infrastructure_node_sys_period"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"tstzrange\""), this, "", new TimeRangeBinding());

    private InfrastructureNodesWithHistory(Name alias, Table<InfrastructureNodesWithHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private InfrastructureNodesWithHistory(Name alias, Table<InfrastructureNodesWithHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view("create view \"infrastructure_nodes_with_history\" as  SELECT infrastructure_nodes.infrastructure_node_id,\n    infrastructure_nodes.infrastructure_node_ext_id,\n    infrastructure_nodes.infrastructure_node_type,\n    infrastructure_nodes.infrastructure_node_location,\n    infrastructure_nodes.infrastructure_node_projected_location,\n    infrastructure_nodes.infrastructure_node_sys_period\n   FROM infrastructure_network.infrastructure_nodes\nUNION ALL\n SELECT infrastructure_nodes_history.infrastructure_node_id,\n    infrastructure_nodes_history.infrastructure_node_ext_id,\n    infrastructure_nodes_history.infrastructure_node_type,\n    infrastructure_nodes_history.infrastructure_node_location,\n    infrastructure_nodes_history.infrastructure_node_projected_location,\n    infrastructure_nodes_history.infrastructure_node_sys_period\n   FROM infrastructure_network.infrastructure_nodes_history;"));
    }

    /**
     * Create an aliased
     * <code>infrastructure_network.infrastructure_nodes_with_history</code>
     * table reference
     */
    public InfrastructureNodesWithHistory(String alias) {
        this(DSL.name(alias), INFRASTRUCTURE_NODES_WITH_HISTORY);
    }

    /**
     * Create an aliased
     * <code>infrastructure_network.infrastructure_nodes_with_history</code>
     * table reference
     */
    public InfrastructureNodesWithHistory(Name alias) {
        this(alias, INFRASTRUCTURE_NODES_WITH_HISTORY);
    }

    /**
     * Create a
     * <code>infrastructure_network.infrastructure_nodes_with_history</code>
     * table reference
     */
    public InfrastructureNodesWithHistory() {
        this(DSL.name("infrastructure_nodes_with_history"), null);
    }

    public <O extends Record> InfrastructureNodesWithHistory(Table<O> child, ForeignKey<O, InfrastructureNodesWithHistoryRecord> key) {
        super(child, key, INFRASTRUCTURE_NODES_WITH_HISTORY);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : InfrastructureNetwork.INFRASTRUCTURE_NETWORK;
    }

    @Override
    public InfrastructureNodesWithHistory as(String alias) {
        return new InfrastructureNodesWithHistory(DSL.name(alias), this);
    }

    @Override
    public InfrastructureNodesWithHistory as(Name alias) {
        return new InfrastructureNodesWithHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InfrastructureNodesWithHistory rename(String name) {
        return new InfrastructureNodesWithHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InfrastructureNodesWithHistory rename(Name name) {
        return new InfrastructureNodesWithHistory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<UUID, String, String, Point, Point, TimeRange> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
